/**
 * created 04/08/2013
 * 
 * @author arakovsky
 * 
 * @description test case of localization (server side, client side: nls, gnls)
 * 
 * @generated by TemplateWizard, v.2012/11/21 //do not remove this comment please
 * @see http://livedocs.dojotoolkit.org/util/doh
 */
define([
	"dojo/ready",
	"dojo/dom",
	"dojo/html",
	"doh",
	// tested libraries
	"gjax/i18n!./nls/screen", // gjax/tests/i18n/mock-gnls/screen.js?l=sk-sk.js
	"gjax/i18n!./nls/messages", // gjax/tests/i18n/mock-gnls/messages.js?l=sk-sk.js
	"gjax/i18n!./nestedFolder/nls/messages", // gjax/tests/i18n/nestedFolder/mock-gnls/messages.js?l=sk-sk.js
	"gjax/i18n!./nestedFolder/nestedFolder2/nls/screen",
	"dojo/i18n!./nls/Screen"
], function(ready, dom, html, doh, i18nScreen, i18nLocalMessages, i18nNested1, i18nNested2, dojoI18n) {

	/*====== GJAX I18N - as resources are used .properties files, '/nls/' is replaces for '/gnls/' in URI*/
	html.set(dom.byId("screenJspx"), i18nScreen("message")); /* git-qa */
	html.set(dom.byId("message"), i18nScreen("message2"));/* git-qa */
	html.set(dom.byId("btnSave"), i18nScreen("btnSave"));/* git-qa */
	html.set(dom.byId("btnOk"), i18nScreen("btnOk"));/* git-qa */
	html.set(dom.byId("randomUnresolvedCode"), i18nScreen("randomUnresolvedCode"));/* git-qa */
	html.set(dom.byId("messageWithArrParams"), i18nScreen("messageWithArrParams", [/* git-qa */
		"foo",
		3.5
	]));
	html.set(dom.byId("messageWithOneArrParam"), i18nScreen("messageWithOneArrParam", [/* git-qa */
		"foo"
	]));
	html.set(dom.byId("messageWithOneArrParam2"), i18nScreen("messageWithOneArrParam", "foo"));/* git-qa */
	html.set(dom.byId("messageWithObjParams"), i18nScreen("messageWithObjectParams", {/* git-qa */
		a : "foo",
		b : 3.5
	}));

	html.set(dom.byId("nest1Message"), i18nNested1("message"));/* git-qa */
	html.set(dom.byId("nest1Message2"), i18nNested1("message2"));/* git-qa */

	html.set(dom.byId("nest2Message"), i18nNested2("message")); /* git-qa */
	html.set(dom.byId("nest2Message2"), i18nNested2("message2")); /* git-qa */

	/*====== Dojo I18N - as resources are used .js files*/
	html.set(dom.byId("screenJspxMessage2"), dojoI18n.screenJspxMessage); /* git-qa */
	html.set(dom.byId("localMessage2"), dojoI18n.localMessage); /* git-qa */
	html.set(dom.byId("btnSave2"), dojoI18n.btnSave); /* git-qa */
	html.set(dom.byId("btnSearch2"), dojoI18n.btnSearch); /* git-qa */
	html.set(dom.byId("randomUnresolvedCode2"), dojoI18n.randomUnresolvedCode); /* git-qa */

	var testObject = {
		"gjax/i18n localization" : function() {
			doh.assertEqual(dom.byId("screenJspx").innerHTML, "Current folder message - screen.jspx");/* git-qa */
			doh.assertEqual(dom.byId("message").innerHTML, "Current folder message2");/* git-qa */
			doh.assertEqual(dom.byId("btnSave").innerHTML, "SK: save - screen.jspx");/* git-qa */
			doh.assertEqual(dom.byId("btnOk").innerHTML, "SK: ok - _messages");/* git-qa */
			doh.assertEqual(dom.byId("randomUnresolvedCode").innerHTML, "randomUnresolvedCode");/* git-qa */
			doh.assertEqual(dom.byId("messageWithArrParams").innerHTML, "Param #0 foo and param #1 3.5");/* git-qa */
			doh.assertEqual(dom.byId("messageWithOneArrParam").innerHTML, "Param #0 foo");/* git-qa */
			doh.assertEqual(dom.byId("messageWithOneArrParam2").innerHTML, "Param #0 foo");/* git-qa */
			doh.assertEqual(dom.byId("messageWithObjParams").innerHTML, "Param #a foo and param #b 3.5");/* git-qa */
		},
		"test dojo/i18n works" : function() {
			doh.t(dom.byId("btnSave2").innerHTML == "Root: save");/* git-qa */
		}
	};

	// --------------------------------------
	doh.register("i18n", testObject);
	doh.register("i18nBugs", {
		"missing params" : function() {
			// no substitution is attempted without second param
			doh.is("Param #0 ${0} and param #1 ${1}", i18nScreen("messageWithArrParams"));
			// when no data for substitution are provided - "null"/"undefined" will be used as values
			doh.is("Param #0 undefined and param #1 undefined", i18nScreen("messageWithArrParams", null));
			doh.is("Param #0 undefined and param #1 undefined", i18nScreen("messageWithArrParams", []));
			doh.is("Param #0 null and param #1 undefined", i18nScreen("messageWithArrParams", [
				null
			]));
			doh.is("Param #0 null and param #1 null", i18nScreen("messageWithArrParams", [
				null,
				null
			]));
			// same with object params
			doh.is("Param #a ${a} and param #b ${b}", i18nScreen("messageWithObjectParams"));
			doh.is("Param #a undefined and param #b undefined", i18nScreen("messageWithObjectParams", null));
			doh.is("Param #a undefined and param #b undefined", i18nScreen("messageWithObjectParams", {}));
			doh.is("Param #a null and param #b NaN", i18nScreen("messageWithObjectParams", {
				a : null,
				b : NaN
			}));
		}
	});

	ready(function() {
		doh.run();
	});
});