/**
 * created 07/07/2015
 * 
 * @author pmelisko, marcus
 * @see http://livedocs.dojotoolkit.org/util/doh
 * @description TODO: fill in description
 * 
 * @generated by TemplateWizard, v.2015/01/08 //do not remove this comment please
 */
define([
	"doh",
	"dojo/has",
	"dojox/lang/functional",
	//tested libraries,
	"dojo/_base/lang"
], function(doh, has, df, lang) {

	// ---------------------------- test page ------------------
	//	if (doh.isBrowser) {
	//		// timeout - the number milliseconds to wait for the test page to load before signaling an error
	//		// use DohTest-Page wizard to generate folder structure for test page
	//		doh.register("put-selector-Page", require.toUrl("./put-selector-page/sample.raw"), /*timeout*/9000);
	//	}

	// ---------------------------- test object ------------------
	// private functions
	function _createTests(testObj) {
		return df.map(testObj.testFunction, function(testFunction, testName) {
			return {
				testType : "perf",
				trialDuration : 100,
				trialDelay : 100,
				trialIterations : 10,
				name : testName,
				setUp : testObj.setUp,
				tearDown : function() {
					// cleanup to do after runTest.
				},
				runTest : testFunction
			};
		});
	}

	doh.register("bind_vs_hitch", _createTests({
		setUp : function() {
			var scopeObj = {
					helloWorld : function() {
						return "Hello World";
					}
				};

				function print() {
					return this.helloWorld();
				}

				this.bindFn = print.bind(scopeObj);
				this.hitchFn = lang.hitch(scopeObj, print);
		},
		testFunction : {
			"bind" : function() {
				this.bindFn(); // execute binded function
			},
			"hitch" : function() {
				this.hitchFn(); // execute hitched function
			}
		}
	}));
	
	doh.register("bind_vs_hitch_arguments", _createTests({
		setUp : function() {
			var scopeObj = {
					helloWorld : function(message, name) {
						return message + name;
					}
				};

				function print(message, name) {
					return this.helloWorld(message, name);
				}

				this.bindFn = print.bind(scopeObj, "Hello from bind by");
				this.hitchFn = lang.hitch(scopeObj, print, "Hello from hitch by");
		},
		testFunction : {
			"bind" : function() {
				this.bindFn("test"); // execute binded function
			},
			"hitch" : function() {
				this.hitchFn("test"); // execute hitched function
			}
		}
	}));

	// runnable with: node (dnode)
	has("host-browser") || doh.run();

	// Performance test results interpretation:
	// 
	// TRIAL SIZE is the number of test iterations in one of <NUMBER OF TRIALS> trials. 
	// Interesting values are AVERAGE TEST ITERATION TIME and MEDIAN TEST ITERATION 
	// TIME. The AVERAGE TEST ITERATION TIME (average time a single iteration of the 
	// test function takes) is calculated as AVERAGE TRIAL EXECUTION TIME/TRIAL SIZE.
	// MEDIAN TEST ITERATION TIME is median of all trials' times divided by TRIAL SIZE.
});
