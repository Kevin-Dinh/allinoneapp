/**
 * created 02/01/2013
 * 
 * @author marcus
 * @see http://livedocs.dojotoolkit.org/util/doh
 * @description also published on http://jsperf.com/endswith/4
 * 
 * @generated by TemplateWizard, v.2013/01/03 //do not remove this comment please
 */
define([
	"doh"
], function(doh) {

	var shortS = _make(100, "fooBar");
	//var longS = _make(1000, "fooBar");

	function _make(len, sufix) {
		var i, s = [];
		for (i = 0; i < len; i++) {
			s[i] = i;			
		}
		s.push(sufix);
		return s.join("");
	}
	
	var impls = {
		search : function(that, search) {
			return ~that.search(search + "$");
		},
		lastIndexOf_ugly : function(that, search) {
			var x = that.lastIndexOf(search);
			return x != -1 && x == (that.length - search.length);
		},
		lastIndexOf : function(that, search) {
			// more semantic, version
			return that.lastIndexOf(search) + search.length === that.length;
		},
		substring : function(that, search) {
			return that.substring(that.length - search.length) === search;
		},
		slice : function(that, search) {
			return search === "" || that.slice(-search.length) === search;
		}
	};
	var quickCorrectnessVerification = {
		"search" : function() {
			doh.t(impls.search(shortS, "fooBar"));
			doh.t(impls.search(shortS, ""));
			doh.f(impls.search(shortS, "fooBaz"));
		},
		"lastIndexOf" : function() {
			doh.t(impls.lastIndexOf(shortS, "fooBar"));
			doh.t(impls.lastIndexOf(shortS, ""));
			doh.f(impls.lastIndexOf(shortS, "fooBaz"));
		},
		"substring" : function() {
			doh.t(impls.substring(shortS, "fooBar"));
			doh.t(impls.substring(shortS, ""));
			doh.f(impls.substring(shortS, "fooBaz"));
		},
		"slice" : function() {
			doh.t(impls.slice(shortS, "fooBar"));
			doh.t(impls.slice(shortS, ""));
			doh.f(impls.slice(shortS, "fooBaz"));
		}
	};
	doh.register("endsWithPerfTest", quickCorrectnessVerification);

	// next is not used, see jsPerf  http://jsperf.com/endswith/4 and higher
//	// ---------------------------- performance test -------------
//	var performanceTestObject = {
//		name : "endsWithPerfTest-Performance-variant-1",
//		testType : "perf",
//		trialDuration : 100,
//		trialDelay : 50,
//		trialIterations : 50,
//		setUp : function() {
//
//		},
//		tearDown : function() {
//			// cleanup to do after runTest.
//		},
//		runTest : function() {
//		}
//	};
//
//	
//	//doh.register("endsWithPerfTest-Performance", performanceTestObject);
//
//	// Performance test results interpretation:
//	// 
//	// TRIAL SIZE is the number of test iterations in one of <NUMBER OF TRIALS> trials. 
//	// Interesting values are AVERAGE TEST ITERATION TIME and MEDIAN TEST ITERATION 
//	// TIME. The AVERAGE TEST ITERATION TIME (average time a single iteration of the 
//	// test function takes) is calculated as AVERAGE TRIAL EXECUTION TIME/TRIAL SIZE.
//	// MEDIAN TEST ITERATION TIME is median of all trials' times divided by TRIAL SIZE.
});
