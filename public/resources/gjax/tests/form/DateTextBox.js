/**
 * created 05/03/2013
 * 
 * @author lzboron
 * 
 * @description test of date inputs, controls their value and displayed value
 * 
 * @generated by TemplateWizard, v.2012/11/21 //do not remove this comment please
 * @see http://livedocs.dojotoolkit.org/util/doh
 */
define([
	"dojo/ready",
	"doh",
	"dijit/registry",
	"dijit/Fieldset",
	//tested libraries
	"dojox/form/DateTextBox",
	"gjax/form/YearTextBox",
	"gjax/form/MonthYearTextBox",
	"gjax/form/MonthTextBox",
	"gjax/form/DayTextBox",
	"gjax/form/DateTimeTextBox",
	"gjax/extensions/dateTextBox",
	"dojo/parser"
], function(ready, doh, registry) {

	var testObject = {
		validDateTextBox : function() {
			var dateTextBox = registry.byId("dateTextBoxValid");
			dateTextBox.set("value", new Date(2013, 3, 18, 12, 25, 42));
			doh.assertEqual(new Date(2013, 3, 18), dateTextBox.get("value"));
			doh.assertEqual("18.4.2013", dateTextBox.get("displayedValue"));
		},
		validYearTextBox : function() {
			var dateTextBox = registry.byId("yearTextBoxValid");
			dateTextBox.set("value", new Date(2013, 3, 18, 12, 25, 42));
			doh.assertEqual(new Date(2013, 0, 1), dateTextBox.get("value"));
			doh.assertEqual("2013", dateTextBox.get("displayedValue"));
		},
		validMonthYearTextBox : function() {
			var dateTextBox = registry.byId("monthYearTextBoxValid");
			dateTextBox.set("value", new Date(2013, 3, 18, 12, 25, 42));
			doh.assertEqual(new Date(2013, 3, 1), dateTextBox.get("value"));
			doh.assertEqual("4.2013", dateTextBox.get("displayedValue"));
		},
		validMonthTextBox : function() {
			var dateTextBox = registry.byId("monthTextBoxValid");
			dateTextBox.set("value", new Date(2013, 3, 18, 12, 25, 42));
			doh.assertEqual(new Date(1970, 3, 1), dateTextBox.get("value"));
			doh.assertEqual("apr√≠l", dateTextBox.get("displayedValue"));
		},
		validDayTextBox : function() {
			var dateTextBox = registry.byId("dayTextBoxValid");
			dateTextBox.set("value", new Date(2013, 3, 18, 12, 25, 42));
			doh.assertEqual(new Date(1970, 0, 18), dateTextBox.get("value"));
			doh.assertEqual("18", dateTextBox.get("displayedValue"));
		},
		validDateTimeTextBox : function() {
			var dateTextBox = registry.byId("dateTimeTextBoxValid");
			var dateTextBoxWithSeconds = registry.byId("dateTimeTextBoxValidSeconds");
			dateTextBox.set("value", new Date(2013, 3, 18, 12, 25, 42));
			dateTextBoxWithSeconds.set("value", new Date(2013, 3, 18, 12, 25, 42));
			doh.assertEqual(new Date(2013, 3, 18, 12, 25, 0), dateTextBox.get("value"),"a");
			doh.assertEqual(new Date(2013, 3, 18, 12, 25, 42), dateTextBoxWithSeconds.get("value"),"b");
			doh.assertEqual("18.4.2013 12:25", dateTextBox.get("displayedValue"),"c");
			doh.assertEqual("18.4.2013 12:25:42", dateTextBoxWithSeconds.get("displayedValue"),"d");
		},
		emptyDateTextBox : function() {
			var emptyTextBoxes = [
				"dateTextBoxEmpty",
				"yearTextBoxEmpty",
				"monthYearTextBoxEmpty",
				"monthTextBoxEmpty",
				"dayTextBoxEmpty",
				"dateTimeTextBoxEmpty"
			];
			var dateTextBox;
			var emptyTextBoxesCount = emptyTextBoxes.length;
			for (var i = 0; i < emptyTextBoxesCount; i++) {
				dateTextBox = registry.byId(emptyTextBoxes[i]);
				dateTextBox.set("value", null);
				doh.assertEqual(null, dateTextBox.get("value"));
				doh.assertEqual("", dateTextBox.get("displayedValue"));
			}
		},
		invalidDateTextBox : function() {
			var invalidTextBoxes = [
				"dateTextBoxEmpty",
				"yearTextBoxEmpty",
				"monthYearTextBoxEmpty",
				"monthTextBoxEmpty",
				"dayTextBoxEmpty",
				"dateTimeTextBoxEmpty"
			];
			var dateTextBox;
			var invalidTextBoxesCount = invalidTextBoxes.length;
			for (var i = 0; i < invalidTextBoxesCount; i++) {
				dateTextBox = registry.byId(invalidTextBoxes[i]);
				dateTextBox.set("value", new Date("InvalidDate"));
				doh.assertEqual(null, dateTextBox.get("value"));
				doh.assertEqual("", dateTextBox.get("displayedValue"));
			}
		}
	};

	// --------------------------------------
	doh.register("DateTextBox", testObject);

	ready(function() {
		doh.run();
	});
});