/**
 * created 05/16/2014
 * 
 * @author lzboronux
 * 
 * @description TODO: fill in description
 * 
 * @generated by TemplateWizard, v.2012/11/21 //do not remove this comment please
 * @see http://livedocs.dojotoolkit.org/util/doh
 */
define([
	"dojo/ready",
	"doh",
	"dijit/registry",
	"gjax/Collections",
	"dojo/store/Memory", //tested libraries
	"dojo/on",
	"dojo/query",
	"dojo/dom-prop",
	"dojox/mvc/at",
	"gjax/mvc/ModelRefController",
	"gjax/extensions/_FormSelectWidget", //so reset works as expected
//	"gjax/extensions/checkedMultiSelect", 
	"dojox/form/CheckedMultiSelect",
	"gjax/form/_CheckedMultiSelectAllMixin",
	"dijit/form/Form",
	"dojo/parser"
], function(ready, doh, registry, collectionUtils, Memory, on, query, domProp, at, ModelRefController) {

	window.at = at;

	ready(function() {
		var cms = registry.byId("cms");
		var cms2 = registry.byId("cms2");

		var store = new Memory({
			data : [
				{
					id : "1",
					name : "One"
				},
				{
					id : "2",
					name : "Two"
				},
				{
					id : "3",
					name : "Three"
				}
			],
			idProperty : "id"
		});

		cms.set({
			labelAttr : "name",
			store : store
		});
		cms2.set({
			labelAttr : "name",
			store : store
		});

		var allOptionLabelNode = query(".dojoxMultiSelectItemLabel", cms.domNode)[0];
		var allOptionInput = query("input", cms.domNode)[0];

		var testObject = {
			"Select all options" : function() {
				cms.reset();
				var val = cms.get("value");
				doh.is(0, val.length);

				on.emit(allOptionLabelNode, "click", {});

				val = cms.get("value");
				doh.is(3, val.length);
				doh.t(~val.indexOf("1"), "1 expected in value");
				doh.t(~val.indexOf("2"), "2 expected in value");
				doh.t(~val.indexOf("3"), "3 expected in value");
			},
			"Deselect all options" : function() {
				cms.reset();
				var val = cms.get("value");
				doh.is(0, val.length);

				on.emit(allOptionLabelNode, "click", {});
				val = cms.get("value");
				doh.is(3, val.length);

				on.emit(allOptionLabelNode, "click", {});
				val = cms.get("value");
				doh.is(0, val.length);
			},
			"Option 'all' is deselected with other option" : function() {
				cms.reset();

				on.emit(allOptionLabelNode, "click", {});
				doh.t(domProp.get(allOptionInput, "checked"), "option 'all' should be checked");

				//test it async, because setting value has also some defered execution
				var deferred = new doh.Deferred();
				setTimeout(deferred.getTestCallback(function() {
					var otherOptionLabelNode = query(".dojoxMultiSelectItemLabel", cms.domNode)[1];
					on.emit(otherOptionLabelNode, "click", {});
					doh.f(domProp.get(allOptionInput, "checked"), "option 'all' should be not checked");
				}), 100);
				return deferred;
			},
			"Works correctly with mvc" : function() {
				var c = new ModelRefController();
				c.bind(registry.byId("form")).loadModelFromData({
					cms : [
						"2",
						"1"
					]
				});

				var val = cms2.get("value");
				doh.is(2, val.length);
				doh.t(~val.indexOf("1"), "1 expected in value");
				doh.t(~val.indexOf("2"), "2 expected in value");

				c.set("cms", [
					"3"
				]);
				val = cms2.get("value");
				doh.is(1, val.length);
				doh.t(~val.indexOf("3"), "3 expected in value");

				var allOptionLabelNode2 = query(".dojoxMultiSelectItemLabel", cms2.domNode)[0];
				var allOptionInput2 = query("input", cms2.domNode)[0];

				doh.f(domProp.get(allOptionInput2, "checked"), "option 'all' should NOT be checked");

				c.set("cms", [
					"1",
					"2",
					"3"
				]);
				val = cms2.get("value");
				doh.is(3, val.length);
				doh.t(domProp.get(allOptionInput2, "checked"), "option 'all' should be checked");

				c.set("cms", null);
				val = cms2.get("value");
				doh.is(0, val.length);
				doh.f(domProp.get(allOptionInput2, "checked"), "option 'all' should NOT be checked");

				on.emit(allOptionLabelNode2, "click", {});
				var cntrVal = c.get("cms");
				doh.is(3, cntrVal.length);

			}
		};

		// --------------------------------------
		doh.register("RangeListTextBox", testObject);
		doh.run();
	});
});