/**
 * created 06/17/2015
 * 
 * @author marcus
 * @see http://livedocs.dojotoolkit.org/util/doh
 * @description TODO: fill in description
 * 
 * @generated by TemplateWizard, v.2015/01/08 //do not remove this comment please
 */
define([
	"doh",
	"dojo/has",
	//tested libraries
	"gjax/uri/builderRql"
], function(doh, has, uriBuilderRql) {

	// test object
	var testObject = {
		"rql value formatter" : function() {
			var expected = "/foo/?eq(bar,foo%20)&ge(baz,123)&in(baz,%28abc?%21%21%21%29)";
			var template = "/foo/?eq(bar,${p})&ge(baz,${q})&in(baz,${f})";
			doh.is(expected, uriBuilderRql(template, {
				p : "foo ",
				q : "123",
				f : "(abc?!!!)"
			}));
		},
		"ONLY STRINGS as values are supported" : function() {
			try {
				uriBuilderRql("/foo/?eq(id,${id})", {
					id : 10
				});
				doh.f(true, "Unexpected Success");
			} catch (e) {
				doh.is("Assertion failed: Expected string, convert or use ${param:format}", e.message);
			}
		},
		"To use another data types & convert them to strings, use formatter" : function() {
			var expected = "/foo/?eq(bar,foo%20%21)&ge(baz,1)&in(baz,0)";
			var template = "/foo/?eq(bar,${p:string})&ge(baz,${q:string})&in(baz,${f:string})";
			doh.is(expected, uriBuilderRql(template, {
				p : {
					toString : function() {
						return "foo !";
					}
				},
				q : 1,
				f : 0
			}));
		}

	};
	doh.register("gjax/uri/builder", testObject);

	// ---------------------------- test functions ----------------

	// runnable with: node (dnode)
	has("host-browser") || doh.run();

});