/**
 * created 07/29/2015
 * 
 * @author marcus
 * @see http://livedocs.dojotoolkit.org/util/doh
 * @description TODO: fill in description
 * 
 * @generated by TemplateWizard, v.2015/07/16 //do not remove this comment please
 */
define([
	"doh",
	"dojo/has",
	"dojo/Deferred",
	// tested libraries,
	"gjax/lang/defaultsMixin"

], function(doh, has, Deferred, defaults) {

	doh.register("defaultsMixin", {
		"mutating !!!" : function() {
			var orig = {
				a : 1
			};
			// unlikely to assign to variable in production code
			var mixed = defaults(orig, {
				a : 2,
				c : 2
			});
			doh.t(orig === mixed);
		},
		"defaults" : function() {
			var orig = {
				a : 1
			};

			defaults(orig, {
				a : 2,
				c : 2
			});

			doh.is(orig.c, 2, "new is added");
			doh.is(orig.a, 1, "existing stays the same");
		},
		"nulls" : function() {
			var orig = {
				a : null
			};

			defaults(orig, {
				a : 2
			});
			doh.is(null, orig.a, "null not overriden");
		},
		"undefined" : function() {
			var orig = {
				a : undefined
			};

			defaults(orig, {
				a : 2
			});
			doh.is(2, orig.a, "existing but undefined gets overriden");
		},
		"first value only" : function() {
			var orig = {

			};
			defaults(orig, {
				a : 2
			}, {
				a : 3
			});
			doh.is(2, orig.a, "once set, that property from other sources is ignored");
		}
	});

	doh.register("defaultsMixin.nulls", {
		"nulls" : function() {
			var orig = {
				a : null
			};

			defaults.nulls(orig, {
				a : 2
			});
			doh.is(2, orig.a, "null are overriden");
		},
		"undefined" : function() {
			var orig = {
				a : undefined
			};

			defaults.nulls(orig, {
				a : 2
			});
			doh.is(2, orig.a, "existing but undefined gets overriden");
		},
		"first 'valid' value only" : function() {
			var orig = {

			};
			defaults.nulls(orig, {
				a : null
			}, {
				a : 3
			});
			doh.is(3, orig.a, "null set by previous is overriden");
		}
	});
	doh.register("defaultsMixin.notIn", {

		"undefined" : function() {
			var orig = {
				a : undefined
			};

			defaults.notIn(orig, {
				a : 2
			});
			doh.is(undefined, orig.a, "existing but undefined gets overriden");
		}
	});

	doh.register("defaultsMixin.notIn", {
		"once again - compared" : function() {

			doh.is(
			// result
			{
				a : 1,
				b : null
			}, defaults(//
			//original
			{
				a : undefined,
				b : null
			}, //
			// defaults
			{
				a : 1,
				b : 1
			}));

			doh.is(
			// result
			{
				a : 1,
				b : 1
			}, defaults.nulls(//
			//original		
			{
				a : undefined,
				b : null
			}, // defaults
			{
				a : 1,
				b : 1
			}));

			doh.is(
			// result
			{
				a : undefined,
				b : null
			}, defaults.notIn(
			//original
			{
				a : undefined,
				b : null
			},
			// defaults
			{
				a : 1,
				b : 1
			}));
		}
	});

	has("host-browser") || doh.run();

});
