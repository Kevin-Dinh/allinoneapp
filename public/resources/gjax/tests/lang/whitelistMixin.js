/**
 * created 10/05/2012
 * 
 * @author jukrop
 * @see http://livedocs.dojotoolkit.org/util/doh
 * @description whitelistMixin test
 * 
 * @generated by TemplateWizard, v.2012/10/01 //do not remove this comment please
 */
define([
	"doh",
	"dojo/has",
	//tested libraries
	"gjax/lang/whitelistMixin"
], function(doh, has, whitelistMixin) {

	// test object
	var test = {
		mixin_none : function() {
			var orig = {
				name : "John",
				age : 6,
				note : "abc"
			};
			var mix = {
				note : "another",
				address : "home"
			};

			whitelistMixin([], orig, mix);

			doh.is({
				name : "John",
				age : 6,
				note : "abc"
			}, orig);
		},

		mixin_all : function() {
			var orig = {
				name : "John",
				age : 6,
				note : "abc"
			};
			var mix = {
				note : "another",
				address : "home"
			};

			whitelistMixin([
				"note",
				"address"
			], orig, mix);

			doh.is({
				name : "John",
				age : 6,
				note : "another",
				address : "home"
			}, orig);
		},

		mixin_some : function() {
			var orig = {
				name : "John",
				age : 6,
				note : "abc"
			};
			var mix = {
				note : "another",
				address : "home"
			};

			whitelistMixin([
				"note",
				"notPresent"
			], orig, mix);

			doh.is({
				name : "John",
				age : 6,
				note : "another"
			}, orig);
		},

		mixin_numbers : function() {
			var orig = {
				0 : "John",
				3 : 6,
				5 : "abc"
			};
			var mix = {
				5 : "another",
				6 : 4
			};

			whitelistMixin([
				"5",
				"6"
			], orig, mix);

			doh.is({
				0 : "John",
				3 : 6,
				5 : "another",
				6 : 4
			}, orig);
		},

		mixin_zeroProp1 : function() {
			var orig = {
				0 : "John"
			};
			var mix = {
				0 : "Fred"
			};

			whitelistMixin([
				"0"
			], orig, mix);

			doh.is({
				0 : "Fred"
			}, orig);
		},

		mixin_zeroProp2 : function() {
			var orig = {
				0 : "John",
				"1" : "abc"
			};
			var mix = {
				0 : "Fred",
				1 : "def"
			};

			whitelistMixin([
				"0",
				"1"
			], orig, mix);

			doh.is({
				0 : "Fred",
				1 : "def"
			}, orig);
		},

		mixin_falseProp : function() {
			var orig = {
				"" : "John",
				0 : 6
			};
			var mix = {
				"" : "Fred",
				0 : 7
			};

			whitelistMixin([
				false
			], orig, mix);

			doh.is({
				"" : "John",
				0 : 6
			}, orig);
		},

		"Mixing into null creates object" : function() {
			var orig = null;
			var mix = {
				note : "another",
				address : "home"
			};
			var newObj = whitelistMixin([
				"note"
			], orig, mix);
			doh.is({
				note : "another"
			}, newObj);
		},

		"Mixing nothing into null creates empty object" : function() {
			var orig = null;
			var mix = {
				note : "another",
				address : "home"
			};
			var newObj = whitelistMixin([
				"stuff"
			], orig, mix);
			doh.is({}, newObj);

			orig = null;
			mix = null;
			newObj = whitelistMixin([
				"stuff"
			], orig, mix);
			doh.is({}, newObj);
		},

		"Null and Undefined properties are copied as well" : function() {
			var orig = {};
			var mix = {
				a : undefined,
				b : null
			};
			var newObj = whitelistMixin([
				"x",
				"a",
				"b",
				"y"
			], orig, mix);
			doh.is({
				a : undefined,
				b : null
			}, newObj);

		},

		"Mixin can take single string as single-item list" : function() {
			var orig = {
				name : "John",
				age : 6,
				note : "abc"
			};
			var mix = {
				name : "Fred",
				note : "another",
				address : "home"
			};

			whitelistMixin("note", orig, mix);

			doh.is({
				name : "John",
				age : 6,
				note : "another"
			}, orig);
		}

	};

	doh.register("gjax/lang/whitelistMixin", test);

	// runnable with: dnode UI/app-ui/src/main/webapp/WEB-INF/views/unit-test/gjax/lang/whitelistMixin.js
	has("host-browser") || doh.run();
});
