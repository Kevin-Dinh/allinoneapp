/**
 * created 03/06/2013
 * 
 * @author marcus
 * 
 * @description unit test for module "gjax/dynaforms/parser"
 * 
 * @generated by TemplateWizard, v.2012/11/21 //do not remove this comment please
 * @see http://livedocs.dojotoolkit.org/util/doh
 */
/*jshint laxbreak:true*/
/*jshint laxcomma:true */

define([
	"dojo/ready",
	"doh",

	//tested libraries
	"gjax/dynaforms/parser",
	"dojo/parser",
	"dojo/_base/lang",
	"dojo/json",
	"dojo/_base/array",
	"dojo/string",
	"gjax/encoders/html/encodeSmp",
	"dojo/dom-construct",
	"dojox/lang/functional",
	"./_parser/dojoParsers.test",//other tests (self registering)
"./_parser/customParsers.test"//other tests (self registering)
], function(ready, doh, gParser, dParser, lang, json, array, string, encHtml, domConstruct, df) {

//	var testObj1 = {
//		// expected to fail, unifinshed impl of parser.js once finished move to testObject	
//		parseWithErrors : function() {
//			var d = {
//				type : "string",
//				_meta : {
//					ctor : "nonsence-class-name"
//				}
//			};
//
//			return gParser.parse(d)//
//			.then(function() {
//				throw new Error("unexpected success");
//			}, function(/*err*/) {
//				return; //error was expected
//			});
//		}
//	};
//	var __failed_designs = {
//		"scan and dojo.instantiate" : function() {/* git-qa */
//			var d = simpleMetas;
//			return gParser.scan(d)//
//			.then(function(parsedNodes) {
//				dParser._instantiate(parsedNodes); //!!! this still needs NODE to be node (see errors)
//			});
//		}
//	};

	var simpleMetas = {
		type : "object",
		properties : {
			n : {

				type : "number",
				_meta : {
					ctor : "NumberTextBox",
					props : {
						label : "lab1"
					}
				}
			},
			nm : {
				type : "number",
				_meta : {
					// testing for multiple
					ctor : "NumberTextBox,gjax/tests/dynaforms/_parser/FooBarMixin",
					props : {
						label : "lab2"
					}

				}
			}
		}
	};
	var testObject = {

		expandMid : function() {
			doh.is("dojox/a/b", gParser.expandMid("dojox/a/b"));
			doh.is("dijit/form/ValidationTextBox", gParser.expandMid("ValidationTextBox"));
		},
		scan : function() {
			var d = simpleMetas;
			return gParser.scan(d)//
			.then(function(instances) {
				doh.is(2, df.keys(instances).length);
				doh.is("string", typeof d.properties.n._meta.ctor, "scan shall not modify orig schema");
				console.log("instances:", instances);
			});
		},
		"scan + instantiate" : function() {
			var d = simpleMetas;
			return gParser.scan(d)//
			.then(function(parsedNodes) {
				return gParser.instantiate(parsedNodes); //some better test for instantiate
			})//
			.then(function(startedInstances) {
				array.forEach(startedInstances, function(w) {
					w.placeAt("placeAtContainer");
				});
			});
		},
		"parse" : function() {
			var d = simpleMetas;
			gParser.parse(d)//
			.then(function(startedInstances) {
				array.forEach(startedInstances, function(w) {
					if (w.label) {
						var label = string.substitute("<label>${label}</label>", w, encHtml);
						domConstruct.place(label, "placeAtContainer");
					}
					w.placeAt("placeAtContainer");
				});
			});
		}
	};

	// --------------------------------------
	doh.register("test", testObject);
	//doh.register("testObj1", testObj1);
	//doh.register("__failed_designs", __failed_designs);

	ready(function() {
		doh.run();
	});
});