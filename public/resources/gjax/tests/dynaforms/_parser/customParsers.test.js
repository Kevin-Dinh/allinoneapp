/**
 * created 03/04/2013
 * 
 * @author marcus
 * 
 * @description unit test for module "gjax/dynaforms/parser"
 * 
 * @generated by TemplateWizard, v.2012/11/21 //do not remove this comment please
 * @see http://livedocs.dojotoolkit.org/util/doh
 */
define([
	"dojo/ready",
	"doh",
//tested libraries
	"dojo/parser",
	"gjax/dynaforms/parser",
// others
	"dijit/form/NumberTextBox",
	"dijit/form/ValidationTextBox",
	"dojo/dom",
	"dojo/_base/declare",
	"dojo/_base/array"

], function(ready, doh, dParser, gParser, NumberTextBox, ValidationTextBox, dom, declare, array) {
	
	//spikes used during development, not a real unit-test
	//------------------------------------------------------------------------------------------
	var customParsersTest = {
		construct_simple : function() {
			gParser.construct(
			/*ctor*/
			NumberTextBox,
			/*params*/{
				constraints : {
					max : 0
				}
			},
			/*node, or string*/
			"numberTextBox01");
		},
		mixins : function() {

			// just demo of mixin
			var _ValidatorOffMixin = declare(null, {
				validate : function(/*Boolean*/isFocused) {
					return isFocused || this.inherited(arguments); //TODO: message not visible
				}
			});
			gParser.construct(
			/*ctor*/
			//no other support for constr+mixins needed, this syntax is fine
			NumberTextBox.createSubclass([
				_ValidatorOffMixin
			]),
			/*params*/{
				constraints : {
					max : 0
				}
			},
			/*node*/
			dom.byId("numberTextBox02"));
		},
		markupFactoryReturningPromise : function() {
			//TODO:
		},
		instantiate : function() {
			var widgets = gParser.instantiate([
				{
					ctor : NumberTextBox,
					node : "w01",
					props : {

					}
				},
				{
					ctor : ValidationTextBox,
					node : "w02",
					props : {

					}
				},
				{
					ctor : ValidationTextBox,
					//node: "w03", without node
					props : {

					}
				}
			], {}, {
			//noStart : true
			});
			// even if the 3rd ValidationTextBox is "not placed" (no node specified)
			doh.t(array.every(widgets, "return item._started;"));
		}
	};

	doh.register("customParsers", customParsersTest);

});