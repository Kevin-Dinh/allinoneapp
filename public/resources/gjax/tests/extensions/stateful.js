/**
 * created 10/07/2013
 * 
 * @author pmelisko
 * @see http://livedocs.dojotoolkit.org/util/doh
 * @description unit test for module "gjax/extensions/Stateful"
 * 
 * @generated by TemplateWizard, v.2013/01/03 //do not remove this comment please
 */
define([
	"doh",
	"gjax/extensions/Stateful",
	"gjax/mvc/ModelRefController"
], function(doh, Stateful, ModelRefController) {

	//TODO: test also situations where name is ommited: watchOnce(function)
	
	// test objects
	var statefulTestObject = {
		"Test watch" : function() {
			var stateful = new Stateful({
				foo : 4,
				bar : 0
			});
			stateful.watch("foo", function(name, oldValue, newValue) {
				stateful.set("bar", newValue);
			});
			stateful.set("foo", 10);
			doh.assertEqual(stateful.get("foo"), stateful.get("bar"));
		},
		"Test watch pausable" : function() {
			var stateful = new Stateful({
				foo : 4,
				bar : 0
			});
			var handler = stateful.watchPausable("foo", function(name, oldValue, newValue) {
				stateful.set("bar", newValue);
			});
			stateful.set("foo", 10);
			doh.assertEqual(stateful.get("foo"), stateful.get("bar")); // should be equal

			handler.pause(); // pause watch
			stateful.set("foo", 5);
			doh.assertNotEqual(stateful.get("foo"), stateful.get("bar")); // should be different

			handler.resume(); // pause watch
			stateful.set("foo", 7);
			doh.assertEqual(stateful.get("foo"), stateful.get("bar")); // should be equal again
		},
		"Test watch once" : function() {
			var stateful = new Stateful({
				foo : 4,
				bar : 0
			});
			stateful.watchOnce("foo", function(name, oldValue, newValue) {
				stateful.set("bar", newValue);
			});
			stateful.set("foo", 10);
			doh.assertEqual(stateful.get("foo"), stateful.get("bar")); // should be equal

			stateful.set("foo", 5);
			doh.assertNotEqual(stateful.get("foo"), stateful.get("bar")); // should be different
		}
	};

	var controllerTestObject = {
		"Test watch array" : function() {
			var controller = new ModelRefController();
			controller.loadModelFromData({
				"foo" : 1,
				"foo2" : 2,
				"bar" : 5
			});
			// watch more properties
			controller.watch(["foo","foo2"], function(name, oldValue, newValue) {
				controller.set("bar", newValue);
			});

			controller.set("foo", 10);
			doh.assertEqual(controller.get("foo"), controller.get("bar")); // should be equal
			controller.set("foo2", 20);
			doh.assertEqual(controller.get("foo2"), controller.get("bar")); // should be equal
		},
		"Test watch pausable array" : function() {
			var controller = new ModelRefController();
			controller.loadModelFromData({
				"foo" : 1,
				"foo2" : 2,
				"bar" : 5
			});

			var handler = controller.watchPausable(["foo","foo2"], function(name, oldValue, newValue) {
				controller.set("bar", newValue);
			});

			controller.set("foo", 10);
			doh.assertEqual(controller.get("foo"), controller.get("bar")); // should be equal

			handler.pause();
			controller.set("foo2", 20);
			doh.assertNotEqual(controller.get("foo2"), controller.get("bar")); // should not be equal

			handler.resume();
			controller.set("foo2", 30);
			doh.assertEqual(controller.get("foo2"), controller.get("bar")); // should not be equal
		},
		"Test watch once array" : function() {
			var controller = new ModelRefController();
			controller.loadModelFromData({
				"foo" : 1,
				"foo2" : 2,
				"bar" : 5
			});

			controller.watchOnce(["foo","foo2"], function(name, oldValue, newValue) {
				controller.set("bar", newValue);
			});

			controller.set("foo", 10);
			doh.assertEqual(controller.get("foo"), controller.get("bar")); // should be equal

			controller.set("foo2", 20);
			doh.assertNotEqual(controller.get("foo2"), controller.get("bar")); // should not be equal
		}
	};

	doh.register("gjax/extensions/Stateful", statefulTestObject);
	doh.register("gjax/extensions/Stateful + gjax/mvc/ModelRefController", controllerTestObject);
});
