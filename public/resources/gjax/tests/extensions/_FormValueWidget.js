/**
 * created 03/14/2013
 * 
 * @author arakovsky
 * 
 * @description unit test for module "gjax/extensions/_FormValueWidget"
 * 
 * @generated by TemplateWizard, v.2012/11/21 //do not remove this comment please
 * @see http://livedocs.dojotoolkit.org/util/doh
 */
define([
	"dojo/ready",
	"doh",
	"dijit/registry",
	"gjax/extensions/_FormValueWidget",
	"dijit/form/TextBox",
	"dojo/dom-style",
	"dojo/dom-class",
	"dojo/dom-attr",
	"dojo/parser"
], function(ready, doh, registry, extension, TextBox, domStyle, domClass, domAttr) {

	var testObject = {
		testGetters : function() {
			var tb1 = registry.byId("tb1");
			var tb2 = registry.byId("tb2");
			var tb3 = registry.byId("tb3");
			doh.t(tb1.get("label") == "Input 1");
			doh.t(tb1.get("labelNode").innerHTML == "Input 1"); /* git-qa */
			doh.t(tb1.get("labelNodes").length == 1);

			doh.t(tb2.get("labelNodes").length == 2);
			doh.t(tb2.get("label") == "Input 2" || tb2.get("label") == "Another label of 2");

			doh.t(tb3.get("labelNodes").length == 3);

			doh.t(tb1.get("title") == "Input 1");
		},
		testSetter : function() {
			var tb4 = registry.byId("tb4");
			var tb5 = registry.byId("tb5");
			tb4.set("label", "New input 4");

			doh.t(tb5.get("labelNodes").length === 0);
			tb5.set("label", "New input 5");
			doh.t(tb5.get("labelNodes").length == 1);

			doh.t(tb4.get("label") == "New input 4");
			doh.t(tb5.get("label") == "New input 5");

			doh.t(tb4.get("title") == "New input 4");
			doh.t(tb5.get("title") == "New input 5");
		},
		testSetterOnProgramaticallyCreatedWidget : function() {
			//in constructor
			var tb6 = new TextBox({
				label : "Input 6"
			});
			tb6.placeAt("tst3");
			tb6.startup();

			//before startup
			var tb7 = new TextBox();
			tb7.placeAt("tst3");
			tb7.set("label", "Input 7");
			tb7.startup();

			//after startup
			var tb8 = new TextBox();
			tb8.placeAt("tst3");
			tb8.startup();
			tb8.set("label", "Input 8");

			doh.t(tb6.get("label") == "Input 6");
			doh.t(tb7.get("label") == "Input 7");
			doh.t(tb8.get("label") == "Input 8");

			doh.t(tb6.get("title") == "Input 6");
			doh.t(tb7.get("title") == "Input 7");
			doh.t(tb8.get("title") == "Input 8");
		},
		testHideShow : function() {
			var tb9 = registry.byId("tb9");
			var tb10 = registry.byId("tb10");
			var tb11 = registry.byId("tb11");

			//hide with labels
			tb9.hide();
			tb9.get("labelNodes").forEach(function(node) {
				doh.t(domStyle.get(node, "display") == "none");
			});

			//hide without labels
			tb10.hide(true /*keepLabels*/);
			tb10.get("labelNodes").forEach(function(node) {
				doh.t(domStyle.get(node, "display") != "none");
			});

			//hide and display back
			tb11.hide();
			tb11.get("labelNodes").forEach(function(node) {
				doh.t(domStyle.get(node, "display") == "none");
			});
			tb11.show();
			tb11.get("labelNodes").forEach(function(node) {
				doh.t(domStyle.get(node, "display") != "none");
			});
		},
		testDisabled : function() { //readOnly has same impl.
			var tb12 = registry.byId("tb12");
			var tb13 = registry.byId("tb13");
			var tb14 = registry.byId("tb14"); //without label
			var tb15 = registry.byId("tb15"); //without label

			tb12.get("labelNodes").forEach(function(node) {
				doh.t(domClass.contains(node, "disabled"));
			});
			tb13.get("labelNodes").forEach(function(node) {
				doh.t(!domClass.contains(node, "disabled"));
			});
			tb13.set("disabled", true);
			tb13.get("labelNodes").forEach(function(node) {
				doh.t(domClass.contains(node, "disabled"));
			});

			tb14.set("label", "Input 14");
			doh.t(domClass.contains(tb14.get("labelNode"), "disabled"));
			tb14.set("disabled", false);
			doh.t(!domClass.contains(tb14.get("labelNode"), "disabled"));

			tb15.set({
				label : "Input 15",
				disabled : true
			});
			doh.t(domClass.contains(tb15.get("labelNode"), "disabled"));

			var tb16 = new TextBox({
				label : "Input 16",
				disabled : true
			});
			tb16.placeAt(tb15.domNode, "after");
			tb16.startup();
			doh.t(domClass.contains(tb16.get("labelNode"), "disabled"));

			var tb17 = registry.byId("tb17");
			tb17.set("disabled", true);
			doh.t(domAttr.get(tb17.focusNode, "readonly"));
			doh.f(domAttr.get(tb17.focusNode, "disabled"));
			tb17.set("readOnly", true);
			doh.t(domAttr.get(tb17.focusNode, "readonly"));
			doh.f(domAttr.get(tb17.focusNode, "disabled"));
			tb17.set("readOnly", false);
			doh.t(domAttr.get(tb17.focusNode, "readonly"));
			doh.f(domAttr.get(tb17.focusNode, "disabled"));
			tb17.set("readOnly", true);
			tb17.set("disabled", false);
			doh.t(domAttr.get(tb17.focusNode, "readonly"));
			doh.f(domAttr.get(tb17.focusNode, "disabled"));
			tb17.set("readOnly", false);
			tb17.set("disabled", false);
			doh.f(domAttr.get(tb17.focusNode, "readonly"));
			doh.f(domAttr.get(tb17.focusNode, "disabled"));

		}
	};

	// --------------------------------------
	doh.register("form-value-widget", testObject);

	ready(function() {
		doh.run();
	});
});