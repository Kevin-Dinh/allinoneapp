/**
 * created 10/21/2013
 * 
 * @author pmelisko
 * 
 * @description unit test for module "gjax/extensions/dateTextBox"
 * 
 * @generated by TemplateWizard, v.2012/11/21 //do not remove this comment please
 * @see http://livedocs.dojotoolkit.org/util/doh
 */
define([
	"dojo/ready",
	"doh",
	"dijit/registry", //tested libraries
	"gjax/_base/date",
	"gjax/extensions/dateTextBox",
	"dojox/form/DateTextBox",
	"dijit/form/TimeTextBox",
	"gjax/form/DateTimeTextBox",
	"put-selector/put",
	"dojo/dom",
	"dojo/parser"
], function(ready, doh, registry, gdate, extension, DateTextBox, TimeTextBox, DateTimeTextBox, put, dom) {

	function equal(w, expected, hint) {
		return doh.is(expected, w.get("value"), hint);
	}

	function test(value, Module, nodeId, noExtendedFormats) {
		var widget = new Module({
			//TEST THOSE COMBINATIONS
			_extendedDateFormats : noExtendedFormats ? null : [
				"dd.MM.yyyy",
				"ddMMyyyy",
				"dd/MM/yyyy",
				"ddMMyy"
			],
			_extendedTimeFormats : noExtendedFormats ? null : [
				"H:mm",
				"Hmm",
				"H:mm:ss",
				"Hmmss"
			],
			//all tests are written, expecting this is set to true (unius default)
			showSeconds : true
		});

		widget.placeAt(put(dom.byId(nodeId), "div"));
		widget.startup();

		widget.set("displayedValue", value);
		widget.set("label", "input (" + value + ")");
		widget.focus();
		return widget; // call to parse displayedValue
	}

	function testDateTextBox(value, noExtendedFormats) {
		return test(value, DateTextBox, (noExtendedFormats ? "noExt" : "") + "dateTextBoxId", noExtendedFormats);
	}

	function testDateTimeTextBox(value, noExtendedFormats) {
		return test(value, DateTimeTextBox, (noExtendedFormats ? "noExt" : "") + "dateTimeTextBoxId", noExtendedFormats);
	}

	function testTimeTextBox(value) {
		return test(value, TimeTextBox, "timeTextBoxId");
	}

	var dateTestObject = {
		setFormattedDate : function() {
			equal(testDateTextBox("16.09.1987"), new Date(1987, 8, 16));
		},
		setFormattedDateSlahses : function() {
			equal(testDateTextBox("12/12/2012"), new Date(2012, 11, 12));
		},
		setUnFormatterDate : function() {
			equal(testDateTextBox("21081989"), new Date(1989, 7, 21));
		},
		setUnFormatterDateShortYear : function() {
			equal(testDateTextBox("101089"), new Date(1989, 9, 10));
		},
		setUnFormatterDateShortActualYear : function() {
			equal(testDateTextBox("101015"), new Date(2015, 9, 10));
		}
	};

	var dateTestObjectNoExtendPatterns = {
		setDefaultFormattedDate : function() {
			equal(testDateTextBox("16.09.1987", true), new Date(1987, 8, 16));
		},
		setInvalidFormattedDate : function() {
			// we should fail to parse value
			var w = testDateTextBox("16091987", true);
			equal(w, undefined);
			doh.f(w.validate());
		}
	};

	var dateTimeTestObject = {
		setFormatterDateTimeWithSeconds : function() {
			equal(testDateTimeTextBox("16.09.1987 14:53:12"), new Date(1987, 8, 16, 14, 53, 12));
		},
		setFormatterDateTimeWithoutSecond : function() {
			equal(testDateTimeTextBox("16.12.2013 02:12:00"), new Date(2013, 11, 16, 2, 12, 0));
		},
		setFormatterDateTimeDateSlashes : function() {
			equal(testDateTimeTextBox("12/12/2013 1005"), new Date(2013, 11, 12, 10, 5, 0));
		},
		setUnformatterDateTime : function() {
			equal(testDateTimeTextBox("21081989 1325"), new Date(1989, 7, 21, 13, 25, 0));
		},
		setUnformatterDateTimeWithSecond : function() {
			equal(testDateTimeTextBox("21081852 132512"), new Date(1852, 7, 21, 13, 25, 12));
		},
		setUnformatterDate : function() {
			equal(testDateTimeTextBox("10102013"), new Date(2013, 9, 10, 0, 0, 0));
		},
		setformatterDateUnformattedTime : function() {
			equal(testDateTimeTextBox("1.10.2013 1245"), new Date(2013, 9, 1, 12, 45, 0));
		}
	};

	var dateTimeTestObjectNoExtendPatterns = {
		setDefaultFormattedDate : function() {
			equal(testDateTimeTextBox("16.09.1987 16:00:02", true), new Date(1987, 8, 16, 16, 0, 2));
		},
		setInvalidFormattedDate : function() {
			// we should fail to parse value
			var w = testDateTimeTextBox("16091987 160002", true);
			equal(w, undefined);
			doh.f(w.validate());
		}

	};

	var timeTestObject = {
		setTimeWithDelimiter : function() {
			var w = testTimeTextBox("16:12");
			var expectedValue;
			(expectedValue = gdate.today()).setHours(16, 12);
			doh.t(gdate.equals(w.get("value"), expectedValue, "time"));
		}
	};

	// --------------------------------------
	doh.register("parse-date", dateTestObject);
	doh.register("parse-date-no-extended-patterns", dateTestObjectNoExtendPatterns);
	doh.register("parse-dateTime", dateTimeTestObject);
	doh.register("parse-dateTime-no-extended-patterns", dateTimeTestObjectNoExtendPatterns);
	doh.register("parse-time", timeTestObject);

	ready(function() {
		doh.run();
	});
});