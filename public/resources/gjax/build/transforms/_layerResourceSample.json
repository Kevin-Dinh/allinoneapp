{
	"tag": {
		"amd": 1, 
		"synthetic": 1
	}, 
	"deps": [
	], 
	"text": "define([], 1);\n", 
	"aggregateDeps": [
	], 
	"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/test/layerA.js", 
	"mid": "test/layerA", 
	"pack": {
		"trees": [
			[
				"c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/test", 
				"c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/test", 
				undefined
			]
		], 
		"basePath": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/test", 
		"packageJson": {
			"description": "Application common libraries.", 
			"directories": {
				"lib": "."
			}, 
			"selfFilename": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/test/package.json", 
			"dependencies": {
				"dojo": "current"
			}, 
			"version": "1.0.0dev", 
			"dojoBuild": "test.profile.js", 
			"keywords": [
				"JavaScript", 
				"Dojo", 
				"Widget"
			], 
			"main": "main", 
			"licenses": [
			], 
			"name": "tools"
		}, 
		"copyrightLayers": false, 
		"location": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/test", 
		"selfFilename": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/test/test.profile.js", 
		"copyrightNonlayers": false, 
		"copyright": "", 
		"resourceTags": {
		}, 
		"main": "main", 
		"name": "test", 
		"files": [
		], 
		"dirs": [
		]
	}, 
	"layer": {
		"boot": false, 
		"compat": "", 
		"noref": false, 
		"customBase": false, 
		"discard": false, 
		"copyright": "", 
		"moduleSet": {
			"gjax/i18n": {
				"tag": {
					"amd": 1
				}, 
				"deps": [
					{
						"tag": {
							"amd": 1
						}, 
						"deps": [
							{
								"tag": {
									"amd": 1
								}, 
								"deps": [
									{
										"tag": {
											"amd": 1
										}, 
										"deps": [
										], 
										"text": "define([\"require\", \"module\"], function(require, module){\r\n\t// module:\r\n\t//\t\tdojo/has\r\n\t// summary:\r\n\t//\t\tDefines the has.js API and several feature tests used by dojo.\r\n\t// description:\r\n\t//\t\tThis module defines the has API as described by the project has.js with the following additional features:\r\n\t//\r\n\t//\t\t- the has test cache is exposed at has.cache.\r\n\t//\t\t- the method has.add includes a forth parameter that controls whether or not existing tests are replaced\r\n\t//\t\t- the loader's has cache may be optionally copied into this module's has cahce.\r\n\t//\r\n\t//\t\tThis module adopted from https://github.com/phiggins42/has.js; thanks has.js team!\r\n\r\n\t// try to pull the has implementation from the loader; both the dojo loader and bdLoad provide one\r\n\t// if using a foreign loader, then the has cache may be initialized via the config object for this module\r\n\t// WARNING: if a foreign loader defines require.has to be something other than the has.js API, then this implementation fail\r\n\tvar has = require.has || function(){};\r\n\tif(! 1 ){\r\n\t\tvar\r\n\t\t\tisBrowser =\r\n\t\t\t\t// the most fundamental decision: are we in the browser?\r\n\t\t\t\ttypeof window != \"undefined\" &&\r\n\t\t\t\ttypeof location != \"undefined\" &&\r\n\t\t\t\ttypeof document != \"undefined\" &&\r\n\t\t\t\twindow.location == location && window.document == document,\r\n\r\n\t\t\t// has API variables\r\n\t\t\tglobal = this,\r\n\t\t\tdoc = isBrowser && document,\r\n\t\t\telement = doc && doc.createElement(\"DiV\"),\r\n\t\t\tcache = (module.config && module.config()) || {};\r\n\r\n\t\thas = function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the current value of the named feature.\r\n\t\t\t//\r\n\t\t\t// name: String|Integer\r\n\t\t\t//\t\tThe name (if a string) or identifier (if an integer) of the feature to test.\r\n\t\t\t//\r\n\t\t\t// description:\r\n\t\t\t//\t\tReturns the value of the feature named by name. The feature must have been\r\n\t\t\t//\t\tpreviously added to the cache by has.add.\r\n\r\n\t\t\treturn typeof cache[name] == \"function\" ? (cache[name] = cache[name](global, doc, element)) : cache[name]; // Boolean\r\n\t\t};\r\n\r\n\t\thas.cache = cache;\r\n\r\n\t\thas.add = function(name, test, now, force){\r\n\t\t\t// summary:\r\n\t\t\t//\t \tRegister a new feature test for some named feature.\r\n\t\t\t// name: String|Integer\r\n\t\t\t//\t \tThe name (if a string) or identifier (if an integer) of the feature to test.\r\n\t\t\t// test: Function\r\n\t\t\t//\t\t A test function to register. If a function, queued for testing until actually\r\n\t\t\t//\t\t needed. The test function should return a boolean indicating\r\n\t\t\t//\t \tthe presence of a feature or bug.\r\n\t\t\t// now: Boolean?\r\n\t\t\t//\t\t Optional. Omit if `test` is not a function. Provides a way to immediately\r\n\t\t\t//\t\t run the test and cache the result.\r\n\t\t\t// force: Boolean?\r\n\t\t\t//\t \tOptional. If the test already exists and force is truthy, then the existing\r\n\t\t\t//\t \ttest will be replaced; otherwise, add does not replace an existing test (that\r\n\t\t\t//\t \tis, by default, the first test advice wins).\r\n\t\t\t// example:\r\n\t\t\t//\t\tA redundant test, testFn with immediate execution:\r\n\t\t\t//\t|\thas.add(\"javascript\", function(){ return true; }, true);\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tAgain with the redundantness. You can do this in your tests, but we should\r\n\t\t\t//\t\tnot be doing this in any internal has.js tests\r\n\t\t\t//\t|\thas.add(\"javascript\", true);\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tThree things are passed to the testFunction. `global`, `document`, and a generic element\r\n\t\t\t//\t\tfrom which to work your test should the need arise.\r\n\t\t\t//\t|\thas.add(\"bug-byid\", function(g, d, el){\r\n\t\t\t//\t|\t\t// g\t== global, typically window, yadda yadda\r\n\t\t\t//\t|\t\t// d\t== document object\r\n\t\t\t//\t|\t\t// el == the generic element. a `has` element.\r\n\t\t\t//\t|\t\treturn false; // fake test, byid-when-form-has-name-matching-an-id is slightly longer\r\n\t\t\t//\t|\t});\r\n\r\n\t\t\t(typeof cache[name]==\"undefined\" || force) && (cache[name]= test);\r\n\t\t\treturn now && has(name);\r\n\t\t};\r\n\r\n\t\t// since we're operating under a loader that doesn't provide a has API, we must explicitly initialize\r\n\t\t// has as it would have otherwise been initialized by the dojo loader; use has.add to the builder\r\n\t\t// can optimize these away iff desired\r\n\t\t 1 || has.add(\"host-browser\", isBrowser);\r\n\t\t 1 || has.add(\"dom\", isBrowser);\r\n\t\t 1 || has.add(\"dojo-dom-ready-api\", 1);\r\n\t\t 1 || has.add(\"dojo-sniff\", 1);\r\n\t}\r\n\r\n\tif( 1 ){\r\n\t\t// Common application level tests\r\n\t\thas.add(\"dom-addeventlistener\", !!document.addEventListener);\r\n\t\thas.add(\"touch\", \"ontouchstart\" in document || window.navigator.msMaxTouchPoints > 0);\r\n\t\t// I don't know if any of these tests are really correct, just a rough guess\r\n\t\thas.add(\"device-width\", screen.availWidth || innerWidth);\r\n\r\n\t\t// Tests for DOMNode.attributes[] behavior:\r\n\t\t//\t - dom-attributes-explicit - attributes[] only lists explicitly user specified attributes\r\n\t\t//\t - dom-attributes-specified-flag (IE8) - need to check attr.specified flag to skip attributes user didn't specify\r\n\t\t//\t - Otherwise, in IE6-7. attributes[] will list hundreds of values, so need to do outerHTML to get attrs instead.\r\n\t\tvar form = document.createElement(\"form\");\r\n\t\thas.add(\"dom-attributes-explicit\", form.attributes.length == 0); // W3C\r\n\t\thas.add(\"dom-attributes-specified-flag\", form.attributes.length > 0 && form.attributes.length < 40);\t// IE8\r\n\t}\r\n\r\n\thas.clearElement = function(element){\r\n\t\t// summary:\r\n\t\t//\t Deletes the contents of the element passed to test functions.\r\n\t\telement.innerHTML= \"\";\r\n\t\treturn element;\r\n\t};\r\n\r\n\thas.normalize = function(id, toAbsMid){\r\n\t\t// summary:\r\n\t\t//\t Resolves id into a module id based on possibly-nested tenary expression that branches on has feature test value(s).\r\n\t\t//\r\n\t\t// toAbsMid: Function\r\n\t\t//\t Resolves a relative module id into an absolute module id\r\n\t\tvar\r\n\t\t\ttokens = id.match(/[\\?:]|[^:\\?]*/g), i = 0,\r\n\t\t\tget = function(skip){\r\n\t\t\t\tvar term = tokens[i++];\r\n\t\t\t\tif(term == \":\"){\r\n\t\t\t\t\t// empty string module name, resolves to 0\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// postfixed with a ? means it is a feature to branch on, the term is the name of the feature\r\n\t\t\t\t\tif(tokens[i++] == \"?\"){\r\n\t\t\t\t\t\tif(!skip && has(term)){\r\n\t\t\t\t\t\t\t// matched the feature, get the first value from the options\r\n\t\t\t\t\t\t\treturn get();\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// did not match, get the second value, passing over the first\r\n\t\t\t\t\t\t\tget(true);\r\n\t\t\t\t\t\t\treturn get(skip);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// a module\r\n\t\t\t\t\treturn term || 0;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tid = get();\r\n\t\treturn id && toAbsMid(id);\r\n\t};\r\n\r\n\thas.load = function(id, parentRequire, loaded){\r\n\t\t// summary:\r\n\t\t//\t\tConditional loading of AMD modules based on a has feature test value.\r\n\t\t// id: String\r\n\t\t//\t\tGives the resolved module id to load.\r\n\t\t// parentRequire: Function\r\n\t\t//\t\tThe loader require function with respect to the module that contained the plugin resource in it's\r\n\t\t//\t\tdependency list.\r\n\t\t// loaded: Function\r\n\t\t//\t Callback to loader that consumes result of plugin demand.\r\n\r\n\t\tif(id){\r\n\t\t\tparentRequire([id], loaded);\r\n\t\t}else{\r\n\t\t\tloaded();\r\n\t\t}\r\n\t};\r\n\r\n\treturn has;\r\n});\r\n", 
										"aggregateDeps": [
											"require", 
											"module"
										], 
										"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/dojo/has.js", 
										"mid": "dojo/has", 
										"pack": {
											"trees": [
												[
													"c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo", 
													"c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/dojo", 
													undefined
												]
											], 
											"basePath": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo", 
											"packageJson": {
												"description": "Dojo core is a powerful, lightweight library that makes common tasks quicker and easier. Animate elements, manipulate the DOM, and query with easy CSS syntax, all without sacrificing performance.", 
												"directories": {
													"lib": "."
												}, 
												"homepage": "http://dojotoolkit.org/", 
												"selfFilename": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/package.json", 
												"version": "1.9.0dev", 
												"dojoBuild": "dojo.profile.js", 
												"keywords": [
													"JavaScript", 
													"Dojo", 
													"Toolkit"
												], 
												"main": "main", 
												"licenses": [
													{
														"type": "AFLv2.1", 
														"url": "http://trac.dojotoolkit.org/browser/dojo/trunk/LICENSE#L43"
													}, 
													{
														"type": "BSD", 
														"url": "http://trac.dojotoolkit.org/browser/dojo/trunk/LICENSE#L13"
													}
												], 
												"name": "dojo", 
												"bugs": "http://bugs.dojotoolkit.org/"
											}, 
											"copyrightLayers": false, 
											"location": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo", 
											"selfFilename": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/dojo.profile.js", 
											"copyrightNonlayers": false, 
											"copyright": "", 
											"resourceTags": {
											}, 
											"main": "main", 
											"name": "dojo", 
											"files": [
											], 
											"dirs": [
											]
										}, 
										"pid": "dojo", 
										"job": [
											[
												undefined, 
												0
											], 
											[
												undefined, 
												0
											], 
											[
												undefined, 
												0
											], 
											[
												undefined, 
												5
											], 
											[
												undefined, 
												5
											], 
											[
												undefined, 
												7
											], 
											[
												undefined, 
												7
											], 
											[
												undefined, 
												8
											], 
											[
												undefined, 
												8
											]
										], 
										"encoding": "utf8", 
										"jobPos": 4, 
										"src": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/has.js"
									}, 
									{
										"tag": {
											"amd": 1
										}, 
										"deps": [
											{
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0"
}
										], 
										"text": "define([\"../has\", \"require\"], function(has, require){\r\n\t// module:\r\n\t//\t\tdojo/_base/config\r\n\r\n/*=====\r\nreturn {\r\n\t// summary:\r\n\t//\t\tThis module defines the user configuration during bootstrap.\r\n\t// description:\r\n\t//\t\tBy defining user configuration as a module value, an entire configuration can be specified in a build,\r\n\t//\t\tthereby eliminating the need for sniffing and or explicitly setting in the global variable dojoConfig.\r\n\t//\t\tAlso, when multiple instances of dojo exist in a single application, each will necessarily be located\r\n\t//\t\tat an unique absolute module identifier as given by the package configuration. Implementing configuration\r\n\t//\t\tas a module allows for specifying unique, per-instance configurations.\r\n\t// example:\r\n\t//\t\tCreate a second instance of dojo with a different, instance-unique configuration (assume the loader and\r\n\t//\t\tdojo.js are already loaded).\r\n\t//\t\t|\t// specify a configuration that creates a new instance of dojo at the absolute module identifier \"myDojo\"\r\n\t//\t\t|\trequire({\r\n\t//\t\t|\t\tpackages:[{\r\n\t//\t\t|\t\t\tname:\"myDojo\",\r\n\t//\t\t|\t\t\tlocation:\".\", //assume baseUrl points to dojo.js\r\n\t//\t\t|\t\t}]\r\n\t//\t\t|\t});\r\n\t//\t\t|\r\n\t//\t\t|\t// specify a configuration for the myDojo instance\r\n\t//\t\t|\tdefine(\"myDojo/config\", {\r\n\t//\t\t|\t\t// normal configuration variables go here, e.g.,\r\n\t//\t\t|\t\tlocale:\"fr-ca\"\r\n\t//\t\t|\t});\r\n\t//\t\t|\r\n\t//\t\t|\t// load and use the new instance of dojo\r\n\t//\t\t|\trequire([\"myDojo\"], function(dojo){\r\n\t//\t\t|\t\t// dojo is the new instance of dojo\r\n\t//\t\t|\t\t// use as required\r\n\t//\t\t|\t});\r\n\r\n\t// isDebug: Boolean\r\n\t//\t\tDefaults to `false`. If set to `true`, ensures that Dojo provides\r\n\t//\t\textended debugging feedback via Firebug. If Firebug is not available\r\n\t//\t\ton your platform, setting `isDebug` to `true` will force Dojo to\r\n\t//\t\tpull in (and display) the version of Firebug Lite which is\r\n\t//\t\tintegrated into the Dojo distribution, thereby always providing a\r\n\t//\t\tdebugging/logging console when `isDebug` is enabled. Note that\r\n\t//\t\tFirebug's `console.*` methods are ALWAYS defined by Dojo. If\r\n\t//\t\t`isDebug` is false and you are on a platform without Firebug, these\r\n\t//\t\tmethods will be defined as no-ops.\r\n\tisDebug: false,\r\n\r\n\t// locale: String\r\n\t//\t\tThe locale to assume for loading localized resources in this page,\r\n\t//\t\tspecified according to [RFC 3066](http://www.ietf.org/rfc/rfc3066.txt).\r\n\t//\t\tMust be specified entirely in lowercase, e.g. `en-us` and `zh-cn`.\r\n\t//\t\tSee the documentation for `dojo.i18n` and `dojo.requireLocalization`\r\n\t//\t\tfor details on loading localized resources. If no locale is specified,\r\n\t//\t\tDojo assumes the locale of the user agent, according to `navigator.userLanguage`\r\n\t//\t\tor `navigator.language` properties.\r\n\tlocale: undefined,\r\n\r\n\t// extraLocale: Array\r\n\t//\t\tNo default value. Specifies additional locales whose\r\n\t//\t\tresources should also be loaded alongside the default locale when\r\n\t//\t\tcalls to `dojo.requireLocalization()` are processed.\r\n\textraLocale: undefined,\r\n\r\n\t// baseUrl: String\r\n\t//\t\tThe directory in which `dojo.js` is located. Under normal\r\n\t//\t\tconditions, Dojo auto-detects the correct location from which it\r\n\t//\t\twas loaded. You may need to manually configure `baseUrl` in cases\r\n\t//\t\twhere you have renamed `dojo.js` or in which `<base>` tags confuse\r\n\t//\t\tsome browsers (e.g. IE 6). The variable `dojo.baseUrl` is assigned\r\n\t//\t\teither the value of `djConfig.baseUrl` if one is provided or the\r\n\t//\t\tauto-detected root if not. Other modules are located relative to\r\n\t//\t\tthis path. The path should end in a slash.\r\n\tbaseUrl: undefined,\r\n\r\n\t// modulePaths: [deprecated] Object\r\n\t//\t\tA map of module names to paths relative to `dojo.baseUrl`. The\r\n\t//\t\tkey/value pairs correspond directly to the arguments which\r\n\t//\t\t`dojo.registerModulePath` accepts. Specifying\r\n\t//\t\t`djConfig.modulePaths = { \"foo\": \"../../bar\" }` is the equivalent\r\n\t//\t\tof calling `dojo.registerModulePath(\"foo\", \"../../bar\");`. Multiple\r\n\t//\t\tmodules may be configured via `djConfig.modulePaths`.\r\n\tmodulePaths: {},\r\n\r\n\t// addOnLoad: Function|Array\r\n\t//\t\tAdds a callback via dojo/ready. Useful when Dojo is added after\r\n\t//\t\tthe page loads and djConfig.afterOnLoad is true. Supports the same\r\n\t//\t\targuments as dojo/ready. When using a function reference, use\r\n\t//\t\t`djConfig.addOnLoad = function(){};`. For object with function name use\r\n\t//\t\t`djConfig.addOnLoad = [myObject, \"functionName\"];` and for object with\r\n\t//\t\tfunction reference use\r\n\t//\t\t`djConfig.addOnLoad = [myObject, function(){}];`\r\n\taddOnLoad: null,\r\n\r\n\t// parseOnLoad: Boolean\r\n\t//\t\tRun the parser after the page is loaded\r\n\tparseOnLoad: false,\r\n\r\n\t// require: String[]\r\n\t//\t\tAn array of module names to be loaded immediately after dojo.js has been included\r\n\t//\t\tin a page.\r\n\trequire: [],\r\n\r\n\t// defaultDuration: Number\r\n\t//\t\tDefault duration, in milliseconds, for wipe and fade animations within dijits.\r\n\t//\t\tAssigned to dijit.defaultDuration.\r\n\tdefaultDuration: 200,\r\n\r\n\t// dojoBlankHtmlUrl: String\r\n\t//\t\tUsed by some modules to configure an empty iframe. Used by dojo/io/iframe and\r\n\t//\t\tdojo/back, and dijit/popup support in IE where an iframe is needed to make sure native\r\n\t//\t\tcontrols do not bleed through the popups. Normally this configuration variable\r\n\t//\t\tdoes not need to be set, except when using cross-domain/CDN Dojo builds.\r\n\t//\t\tSave dojo/resources/blank.html to your domain and set `djConfig.dojoBlankHtmlUrl`\r\n\t//\t\tto the path on your domain your copy of blank.html.\r\n\tdojoBlankHtmlUrl: undefined,\r\n\r\n\t// ioPublish: Boolean?\r\n\t//\t\tSet this to true to enable publishing of topics for the different phases of\r\n\t//\t\tIO operations. Publishing is done via dojo/topic.publish(). See dojo/main.__IoPublish for a list\r\n\t//\t\tof topics that are published.\r\n\tioPublish: false,\r\n\r\n\t// useCustomLogger: Anything?\r\n\t//\t\tIf set to a value that evaluates to true such as a string or array and\r\n\t//\t\tisDebug is true and Firebug is not available or running, then it bypasses\r\n\t//\t\tthe creation of Firebug Lite allowing you to define your own console object.\r\n\tuseCustomLogger: undefined,\r\n\r\n\t// transparentColor: Array\r\n\t//\t\tArray containing the r, g, b components used as transparent color in dojo.Color;\r\n\t//\t\tif undefined, [255,255,255] (white) will be used.\r\n\ttransparentColor: undefined,\r\n\t\r\n\t// deps: Function|Array\r\n\t//\t\tDefines dependencies to be used before the loader has been loaded.\r\n\t//\t\tWhen provided, they cause the loader to execute require(deps, callback) \r\n\t//\t\tonce it has finished loading. Should be used with callback.\r\n\tdeps: undefined,\r\n\t\r\n\t// callback: Function|Array\r\n\t//\t\tDefines a callback to be used when dependencies are defined before \r\n\t//\t\tthe loader has been loaded. When provided, they cause the loader to \r\n\t//\t\texecute require(deps, callback) once it has finished loading. \r\n\t//\t\tShould be used with deps.\r\n\tcallback: undefined,\r\n\t\r\n\t// deferredInstrumentation: Boolean\r\n\t//\t\tWhether deferred instrumentation should be loaded or included\r\n\t//\t\tin builds.\r\n\tdeferredInstrumentation: true,\r\n\r\n\t// useDeferredInstrumentation: Boolean|String\r\n\t//\t\tWhether the deferred instrumentation should be used.\r\n\t//\r\n\t//\t\t* `\"report-rejections\"`: report each rejection as it occurs.\r\n\t//\t\t* `true` or `1` or `\"report-unhandled-rejections\"`: wait 1 second\r\n\t//\t\t\tin an attempt to detect unhandled rejections.\r\n\tuseDeferredInstrumentation: \"report-unhandled-rejections\"\r\n};\r\n=====*/\r\n\r\n\tvar result = {};\r\n\tif( 1 ){\r\n\t\t// must be the dojo loader; take a shallow copy of require.rawConfig\r\n\t\tvar src = require.rawConfig, p;\r\n\t\tfor(p in src){\r\n\t\t\tresult[p] = src[p];\r\n\t\t}\r\n\t}else{\r\n\t\tvar adviseHas = function(featureSet, prefix, booting){\r\n\t\t\tfor(p in featureSet){\r\n\t\t\t\tp!=\"has\" && has.add(prefix + p, featureSet[p], 0, booting);\r\n\t\t\t}\r\n\t\t};\r\n\t\tresult =  1  ?\r\n\t\t\t// must be a built version of the dojo loader; all config stuffed in require.rawConfig\r\n\t\t\trequire.rawConfig :\r\n\t\t\t// a foreign loader\r\n\t\t\tthis.dojoConfig || this.djConfig || {};\r\n\t\tadviseHas(result, \"config\", 1);\r\n\t\tadviseHas(result.has, \"\", 1);\r\n\t}\r\n\r\n\tif(!result.locale && typeof navigator != \"undefined\"){\r\n\t\t// Default locale for browsers.\r\n\t\tresult.locale = (navigator.language || navigator.userLanguage).toLowerCase();\r\n\t}\r\n\r\n\treturn result;\r\n});\r\n\r\n", 
										"aggregateDeps": [
											"../has", 
											"require"
										], 
										"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/dojo/_base/config.js", 
										"mid": "dojo/_base/config", 
										"pack": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0.pack"
}, 
										"pid": "dojo", 
										"job": [
											[
												undefined, 
												0
											], 
											[
												undefined, 
												0
											], 
											[
												undefined, 
												0
											], 
											[
												undefined, 
												0
											], 
											[
												undefined, 
												5
											], 
											[
												undefined, 
												5
											], 
											[
												undefined, 
												7
											], 
											[
												undefined, 
												7
											], 
											[
												undefined, 
												7
											]
										], 
										"encoding": "utf8", 
										"jobPos": 5, 
										"src": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/_base/config.js"
									}
								], 
								"text": "define([\"../has\", \"./config\", \"require\", \"module\"], function(has, config, require, module){\r\n\t// module:\r\n\t//\t\tdojo/_base/kernel\r\n\r\n\t// This module is the foundational module of the dojo boot sequence; it defines the dojo object.\r\n\r\n\tvar\r\n\t\t// loop variables for this module\r\n\t\ti, p,\r\n\r\n\t\t// create dojo, dijit, and dojox\r\n\t\t// FIXME: in 2.0 remove dijit, dojox being created by dojo\r\n\t\tdijit = {},\r\n\t\tdojox = {},\r\n\t\tdojo = {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis module is the foundational module of the dojo boot sequence; it defines the dojo object.\r\n\r\n\t\t\t// notice dojo takes ownership of the value of the config module\r\n\t\t\tconfig:config,\r\n\t\t\tglobal:this,\r\n\t\t\tdijit:dijit,\r\n\t\t\tdojox:dojox\r\n\t\t};\r\n\r\n\r\n\t// Configure the scope map. For a 100% AMD application, the scope map is not needed other than to provide\r\n\t// a _scopeName property for the dojo, dijit, and dojox root object so those packages can create\r\n\t// unique names in the global space.\r\n\t//\r\n\t// Built, legacy modules use the scope map to allow those modules to be expressed as if dojo, dijit, and dojox,\r\n\t// where global when in fact they are either global under different names or not global at all. In v1.6-, the\r\n\t// config variable \"scopeMap\" was used to map names as used within a module to global names. This has been\r\n\t// subsumed by the AMD map configuration variable which can relocate packages to different names. For backcompat,\r\n\t// only the \"*\" mapping is supported. See http://livedocs.dojotoolkit.org/developer/design/loader#legacy-cross-domain-mode for details.\r\n\t//\r\n\t// The following computations contort the packageMap for this dojo instance into a scopeMap.\r\n\tvar scopeMap =\r\n\t\t\t// a map from a name used in a legacy module to the (global variable name, object addressed by that name)\r\n\t\t\t// always map dojo, dijit, and dojox\r\n\t\t\t{\r\n\t\t\t\tdojo:[\"dojo\", dojo],\r\n\t\t\t\tdijit:[\"dijit\", dijit],\r\n\t\t\t\tdojox:[\"dojox\", dojox]\r\n\t\t\t},\r\n\r\n\t\tpackageMap =\r\n\t\t\t// the package map for this dojo instance; note, a foreign loader or no pacakgeMap results in the above default config\r\n\t\t\t(require.map && require.map[module.id.match(/[^\\/]+/)[0]]),\r\n\r\n\t\titem;\r\n\r\n\r\n\t// process all mapped top-level names for this instance of dojo\r\n\tfor(p in packageMap){\r\n\t\tif(scopeMap[p]){\r\n\t\t\t// mapped dojo, dijit, or dojox\r\n\t\t\tscopeMap[p][0] = packageMap[p];\r\n\t\t}else{\r\n\t\t\t// some other top-level name\r\n\t\t\tscopeMap[p] = [packageMap[p], {}];\r\n\t\t}\r\n\t}\r\n\r\n\t// publish those names to _scopeName and, optionally, the global namespace\r\n\tfor(p in scopeMap){\r\n\t\titem = scopeMap[p];\r\n\t\titem[1]._scopeName = item[0];\r\n\t\tif(!config.noGlobals){\r\n\t\t\tthis[item[0]] = item[1];\r\n\t\t}\r\n\t}\r\n\tdojo.scopeMap = scopeMap;\r\n\r\n\t/*===== dojo.__docParserConfigureScopeMap(scopeMap); =====*/\r\n\r\n\t// FIXME: dojo.baseUrl and dojo.config.baseUrl should be deprecated\r\n\tdojo.baseUrl = dojo.config.baseUrl = require.baseUrl;\r\n\tdojo.isAsync = ! 1  || require.async;\r\n\tdojo.locale = config.locale;\r\n\r\n\tvar rev = \"$Rev$\".match(/\\d+/);\r\n\tdojo.version = {\r\n\t\t// summary:\r\n\t\t//\t\tVersion number of the Dojo Toolkit\r\n\t\t// description:\r\n\t\t//\t\tHash about the version, including\r\n\t\t//\r\n\t\t//\t\t- major: Integer: Major version. If total version is \"1.2.0beta1\", will be 1\r\n\t\t//\t\t- minor: Integer: Minor version. If total version is \"1.2.0beta1\", will be 2\r\n\t\t//\t\t- patch: Integer: Patch version. If total version is \"1.2.0beta1\", will be 0\r\n\t\t//\t\t- flag: String: Descriptor flag. If total version is \"1.2.0beta1\", will be \"beta1\"\r\n\t\t//\t\t- revision: Number: The SVN rev from which dojo was pulled\r\n\r\n\t\tmajor: 1, minor: 9, patch: 0, flag: \"dev\",\r\n\t\trevision: rev ? +rev[0] : NaN,\r\n\t\ttoString: function(){\r\n\t\t\tvar v = dojo.version;\r\n\t\t\treturn v.major + \".\" + v.minor + \".\" + v.patch + v.flag + \" (\" + v.revision + \")\";\t// String\r\n\t\t}\r\n\t};\r\n\r\n\t// If  1  is truthy, then as a dojo module is defined it should push it's definitions\r\n\t// into the dojo object, and conversely. In 2.0, it will likely be unusual to augment another object\r\n\t// as a result of defining a module. This has feature gives a way to force 2.0 behavior as the code\r\n\t// is migrated. Absent specific advice otherwise, set extend-dojo to truthy.\r\n\t 1 || has.add(\"extend-dojo\", 1);\r\n\r\n\r\n\t(Function(\"d\", \"d.eval = function(){return d.global.eval ? d.global.eval(arguments[0]) : eval(arguments[0]);}\"))(dojo);\r\n\t/*=====\r\n\tdojo.eval = function(scriptText){\r\n\t\t// summary:\r\n\t\t//\t\tA legacy method created for use exclusively by internal Dojo methods. Do not use this method\r\n\t\t//\t\tdirectly unless you understand its possibly-different implications on the platforms your are targeting.\r\n\t\t// description:\r\n\t\t//\t\tMakes an attempt to evaluate scriptText in the global scope. The function works correctly for browsers\r\n\t\t//\t\tthat support indirect eval.\r\n\t\t//\r\n\t\t//\t\tAs usual, IE does not. On IE, the only way to implement global eval is to\r\n\t\t//\t\tuse execScript. Unfortunately, execScript does not return a value and breaks some current usages of dojo.eval.\r\n\t\t//\t\tThis implementation uses the technique of executing eval in the scope of a function that is a single scope\r\n\t\t//\t\tframe below the global scope; thereby coming close to the global scope. Note carefully that\r\n\t\t//\r\n\t\t//\t\tdojo.eval(\"var pi = 3.14;\");\r\n\t\t//\r\n\t\t//\t\twill define global pi in non-IE environments, but define pi only in a temporary local scope for IE. If you want\r\n\t\t//\t\tto define a global variable using dojo.eval, write something like\r\n\t\t//\r\n\t\t//\t\tdojo.eval(\"window.pi = 3.14;\")\r\n\t\t// scriptText:\r\n\t\t//\t\tThe text to evaluation.\r\n\t\t// returns:\r\n\t\t//\t\tThe result of the evaluation. Often `undefined`\r\n\t};\r\n\t=====*/\r\n\r\n\r\n\tif( 0 ){\r\n\t\tdojo.exit = function(exitcode){\r\n\t\t\tquit(exitcode);\r\n\t\t};\r\n\t}else{\r\n\t\tdojo.exit = function(){\r\n\t\t};\r\n\t}\r\n\r\n\t 1 || has.add(\"dojo-guarantee-console\",\r\n\t\t// ensure that console.log, console.warn, etc. are defined\r\n\t\t1\r\n\t);\r\n\tif( 1 ){\r\n\t\ttypeof console != \"undefined\" || (console = {});\r\n\t\t//\tBe careful to leave 'log' always at the end\r\n\t\tvar cn = [\r\n\t\t\t\"assert\", \"count\", \"debug\", \"dir\", \"dirxml\", \"error\", \"group\",\r\n\t\t\t\"groupEnd\", \"info\", \"profile\", \"profileEnd\", \"time\", \"timeEnd\",\r\n\t\t\t\"trace\", \"warn\", \"log\"\r\n\t\t];\r\n\t\tvar tn;\r\n\t\ti = 0;\r\n\t\twhile((tn = cn[i++])){\r\n\t\t\tif(!console[tn]){\r\n\t\t\t\t(function(){\r\n\t\t\t\t\tvar tcn = tn + \"\";\r\n\t\t\t\t\tconsole[tcn] = ('log' in console) ? function(){\r\n\t\t\t\t\t\tvar a = Array.apply({}, arguments);\r\n\t\t\t\t\t\ta.unshift(tcn + \":\");\r\n\t\t\t\t\t\tconsole[\"log\"](a.join(\" \"));\r\n\t\t\t\t\t} : function(){};\r\n\t\t\t\t\tconsole[tcn]._fake = true;\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thas.add(\"dojo-debug-messages\",\r\n\t\t// include dojo.deprecated/dojo.experimental implementations\r\n\t\t!!config.isDebug\r\n\t);\r\n\tdojo.deprecated = dojo.experimental =  function(){};\r\n\tif(has(\"dojo-debug-messages\")){\r\n\t\tdojo.deprecated = function(/*String*/ behaviour, /*String?*/ extra, /*String?*/ removal){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLog a debug message to indicate that a behavior has been\r\n\t\t\t//\t\tdeprecated.\r\n\t\t\t// behaviour: String\r\n\t\t\t//\t\tThe API or behavior being deprecated. Usually in the form\r\n\t\t\t//\t\tof \"myApp.someFunction()\".\r\n\t\t\t// extra: String?\r\n\t\t\t//\t\tText to append to the message. Often provides advice on a\r\n\t\t\t//\t\tnew function or facility to achieve the same goal during\r\n\t\t\t//\t\tthe deprecation period.\r\n\t\t\t// removal: String?\r\n\t\t\t//\t\tText to indicate when in the future the behavior will be\r\n\t\t\t//\t\tremoved. Usually a version number.\r\n\t\t\t// example:\r\n\t\t\t//\t| dojo.deprecated(\"myApp.getTemp()\", \"use myApp.getLocaleTemp() instead\", \"1.0\");\r\n\r\n\t\t\tvar message = \"DEPRECATED: \" + behaviour;\r\n\t\t\tif(extra){ message += \" \" + extra; }\r\n\t\t\tif(removal){ message += \" -- will be removed in version: \" + removal; }\r\n\t\t\tconsole.warn(message);\r\n\t\t};\r\n\r\n\t\tdojo.experimental = function(/* String */ moduleName, /* String? */ extra){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMarks code as experimental.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis can be used to mark a function, file, or module as\r\n\t\t\t//\t\texperimental.\t Experimental code is not ready to be used, and the\r\n\t\t\t//\t\tAPIs are subject to change without notice.\tExperimental code may be\r\n\t\t\t//\t\tcompleted deleted without going through the normal deprecation\r\n\t\t\t//\t\tprocess.\r\n\t\t\t// moduleName: String\r\n\t\t\t//\t\tThe name of a module, or the name of a module file or a specific\r\n\t\t\t//\t\tfunction\r\n\t\t\t// extra: String?\r\n\t\t\t//\t\tsome additional message for the user\r\n\t\t\t// example:\r\n\t\t\t//\t| dojo.experimental(\"dojo.data.Result\");\r\n\t\t\t// example:\r\n\t\t\t//\t| dojo.experimental(\"dojo.weather.toKelvin()\", \"PENDING approval from NOAA\");\r\n\r\n\t\t\tvar message = \"EXPERIMENTAL: \" + moduleName + \" -- APIs subject to change without notice.\";\r\n\t\t\tif(extra){ message += \" \" + extra; }\r\n\t\t\tconsole.warn(message);\r\n\t\t};\r\n\t}\r\n\r\n\t 1 || has.add(\"dojo-modulePaths\",\r\n\t\t// consume dojo.modulePaths processing\r\n\t\t1\r\n\t);\r\n\tif( 1 ){\r\n\t\t// notice that modulePaths won't be applied to any require's before the dojo/_base/kernel factory is run;\r\n\t\t// this is the v1.6- behavior.\r\n\t\tif(config.modulePaths){\r\n\t\t\tdojo.deprecated(\"dojo.modulePaths\", \"use paths configuration\");\r\n\t\t\tvar paths = {};\r\n\t\t\tfor(p in config.modulePaths){\r\n\t\t\t\tpaths[p.replace(/\\./g, \"/\")] = config.modulePaths[p];\r\n\t\t\t}\r\n\t\t\trequire({paths:paths});\r\n\t\t}\r\n\t}\r\n\r\n\t 1 || has.add(\"dojo-moduleUrl\",\r\n\t\t// include dojo.moduleUrl\r\n\t\t1\r\n\t);\r\n\tif( 1 ){\r\n\t\tdojo.moduleUrl = function(/*String*/module, /*String?*/url){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a URL relative to a module.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar pngPath = dojo.moduleUrl(\"acme\",\"images/small.png\");\r\n\t\t\t//\t|\tconsole.dir(pngPath); // list the object properties\r\n\t\t\t//\t|\t// create an image and set it's source to pngPath's value:\r\n\t\t\t//\t|\tvar img = document.createElement(\"img\");\r\n\t\t\t//\t|\timg.src = pngPath;\r\n\t\t\t//\t|\t// add our image to the document\r\n\t\t\t//\t|\tdojo.body().appendChild(img);\r\n\t\t\t// example:\r\n\t\t\t//\t\tyou may de-reference as far as you like down the package\r\n\t\t\t//\t\thierarchy.  This is sometimes handy to avoid lenghty relative\r\n\t\t\t//\t\turls or for building portable sub-packages. In this example,\r\n\t\t\t//\t\tthe `acme.widget` and `acme.util` directories may be located\r\n\t\t\t//\t\tunder different roots (see `dojo.registerModulePath`) but the\r\n\t\t\t//\t\tthe modules which reference them can be unaware of their\r\n\t\t\t//\t\trelative locations on the filesystem:\r\n\t\t\t//\t|\t// somewhere in a configuration block\r\n\t\t\t//\t|\tdojo.registerModulePath(\"acme.widget\", \"../../acme/widget\");\r\n\t\t\t//\t|\tdojo.registerModulePath(\"acme.util\", \"../../util\");\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// ...\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// code in a module using acme resources\r\n\t\t\t//\t|\tvar tmpltPath = dojo.moduleUrl(\"acme.widget\",\"templates/template.html\");\r\n\t\t\t//\t|\tvar dataPath = dojo.moduleUrl(\"acme.util\",\"resources/data.json\");\r\n\r\n\t\t\tdojo.deprecated(\"dojo.moduleUrl()\", \"use require.toUrl\", \"2.0\");\r\n\r\n\t\t\t// require.toUrl requires a filetype; therefore, just append the suffix \"/*.*\" to guarantee a filetype, then\r\n\t\t\t// remove the suffix from the result. This way clients can request a url w/out a filetype. This should be\r\n\t\t\t// rare, but it maintains backcompat for the v1.x line (note: dojo.moduleUrl will be removed in v2.0).\r\n\t\t\t// Notice * is an illegal filename so it won't conflict with any real path map that may exist the paths config.\r\n\t\t\tvar result = null;\r\n\t\t\tif(module){\r\n\t\t\t\tresult = require.toUrl(module.replace(/\\./g, \"/\") + (url ? (\"/\" + url) : \"\") + \"/*.*\").replace(/\\/\\*\\.\\*/, \"\") + (url ? \"\" : \"/\");\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t};\r\n\t}\r\n\r\n\tdojo._hasResource = {}; // for backward compatibility with layers built with 1.6 tooling\r\n\r\n\treturn dojo;\r\n});\r\n", 
								"aggregateDeps": [
									"../has", 
									"./config", 
									"require", 
									"module"
								], 
								"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/dojo/_base/kernel.js", 
								"mid": "dojo/_base/kernel", 
								"pack": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0.pack"
}, 
								"pid": "dojo", 
								"job": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.1.job"
}, 
								"encoding": "utf8", 
								"jobPos": 5, 
								"src": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/_base/kernel.js"
							}, 
							{
								"tag": {
									"amd": 1
								}, 
								"deps": [
									{
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0"
}, 
									{
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0"
}, 
									{
										"tag": {
											"amd": 1
										}, 
										"deps": [
											{
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0"
}
										], 
										"text": "define([\"./has\"], function(has){\r\n\t// module:\r\n\t//\t\tdojo/sniff\r\n\r\n\t/*=====\r\n\treturn function(){\r\n\t\t// summary:\r\n\t\t//\t\tThis module sets has() flags based on the current browser.\r\n\t\t//\t\tIt returns the has() function.\r\n\t};\r\n\t=====*/\r\n\r\n\tif( 1 ){\r\n\t\tvar n = navigator,\r\n\t\t\tdua = n.userAgent,\r\n\t\t\tdav = n.appVersion,\r\n\t\t\ttv = parseFloat(dav);\r\n\r\n\t\thas.add(\"air\", dua.indexOf(\"AdobeAIR\") >= 0);\r\n\t\thas.add(\"msapp\", parseFloat(dua.split(\"MSAppHost/\")[1]) || undefined);\r\n\t\thas.add(\"khtml\", dav.indexOf(\"Konqueror\") >= 0 ? tv : undefined);\r\n\t\thas.add(\"webkit\", parseFloat(dua.split(\"WebKit/\")[1]) || undefined);\r\n\t\thas.add(\"chrome\", parseFloat(dua.split(\"Chrome/\")[1]) || undefined);\r\n\t\thas.add(\"safari\", dav.indexOf(\"Safari\")>=0 && !has(\"chrome\") ? parseFloat(dav.split(\"Version/\")[1]) : undefined);\r\n\t\thas.add(\"mac\", dav.indexOf(\"Macintosh\") >= 0);\r\n\t\thas.add(\"quirks\", document.compatMode == \"BackCompat\");\r\n\t\tif(dua.match(/(iPhone|iPod|iPad)/)){\r\n\t\t\tvar p = RegExp.$1.replace(/P/, \"p\");\r\n\t\t\tvar v = dua.match(/OS ([\\d_]+)/) ? RegExp.$1 : \"1\";\r\n\t\t\tvar os = parseFloat(v.replace(/_/, \".\").replace(/_/g, \"\"));\r\n\t\t\thas.add(p, os);\t\t// \"iphone\", \"ipad\" or \"ipod\"\r\n\t\t\thas.add(\"ios\", os);\r\n\t\t}\r\n\t\thas.add(\"android\", parseFloat(dua.split(\"Android \")[1]) || undefined);\r\n\t\thas.add(\"bb\", (dua.indexOf(\"BlackBerry\") >= 0 || dua.indexOf(\"BB10\") >= 0) && parseFloat(dua.split(\"Version/\")[1]) || undefined);\r\n\r\n\t\thas.add(\"svg\", typeof SVGAngle !== \"undefined\");\r\n\r\n\t\tif(!has(\"webkit\")){\r\n\t\t\t// Opera\r\n\t\t\tif(dua.indexOf(\"Opera\") >= 0){\r\n\t\t\t\t// see http://dev.opera.com/articles/view/opera-ua-string-changes and http://www.useragentstring.com/pages/Opera/\r\n\t\t\t\t// 9.8 has both styles; <9.8, 9.9 only old style\r\n\t\t\t\thas.add(\"opera\", tv >= 9.8 ? parseFloat(dua.split(\"Version/\")[1]) || tv : tv);\r\n\t\t\t}\r\n\r\n\t\t\t// Mozilla and firefox\r\n\t\t\tif(dua.indexOf(\"Gecko\") >= 0 && !has(\"khtml\") && !has(\"webkit\")){\r\n\t\t\t\thas.add(\"mozilla\", tv);\r\n\t\t\t}\r\n\t\t\tif(has(\"mozilla\")){\r\n\t\t\t\t//We really need to get away from this. Consider a sane isGecko approach for the future.\r\n\t\t\t\thas.add(\"ff\", parseFloat(dua.split(\"Firefox/\")[1] || dua.split(\"Minefield/\")[1]) || undefined);\r\n\t\t\t}\r\n\r\n\t\t\t// IE\r\n\t\t\tif(document.all && !has(\"opera\")){\r\n\t\t\t\tvar isIE = parseFloat(dav.split(\"MSIE \")[1]) || undefined;\r\n\r\n\t\t\t\t//In cases where the page has an HTTP header or META tag with\r\n\t\t\t\t//X-UA-Compatible, then it is in emulation mode.\r\n\t\t\t\t//Make sure isIE reflects the desired version.\r\n\t\t\t\t//document.documentMode of 5 means quirks mode.\r\n\t\t\t\t//Only switch the value if documentMode's major version\r\n\t\t\t\t//is different from isIE's major version.\r\n\t\t\t\tvar mode = document.documentMode;\r\n\t\t\t\tif(mode && mode != 5 && Math.floor(isIE) != mode){\r\n\t\t\t\t\tisIE = mode;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thas.add(\"ie\", isIE);\r\n\t\t\t}\r\n\r\n\t\t\t// Wii\r\n\t\t\thas.add(\"wii\", typeof opera != \"undefined\" && opera.wiiremote);\r\n\t\t}\r\n\t}\r\n\r\n\treturn has;\r\n});\r\n", 
										"aggregateDeps": [
											"./has"
										], 
										"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/dojo/sniff.js", 
										"mid": "dojo/sniff", 
										"pack": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0.pack"
}, 
										"pid": "dojo", 
										"job": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.1.job"
}, 
										"encoding": "utf8", 
										"jobPos": 5, 
										"src": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/sniff.js"
									}
								], 
								"text": "define([\"./kernel\", \"../has\", \"../sniff\"], function(dojo, has){\r\n\t// module:\r\n\t//\t\tdojo/_base/lang\r\n\r\n\thas.add(\"bug-for-in-skips-shadowed\", function(){\r\n\t\t// if true, the for-in iterator skips object properties that exist in Object's prototype (IE 6 - ?)\r\n\t\tfor(var i in {toString: 1}){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn 1;\r\n\t});\r\n\r\n\t// Helper methods\r\n\tvar _extraNames =\r\n\t\t\thas(\"bug-for-in-skips-shadowed\") ?\r\n\t\t\t\t\"hasOwnProperty.valueOf.isPrototypeOf.propertyIsEnumerable.toLocaleString.toString.constructor\".split(\".\") : [],\r\n\r\n\t\t_extraLen = _extraNames.length,\r\n\r\n\t\tgetProp = function(/*Array*/parts, /*Boolean*/create, /*Object*/context){\r\n\t\t\tvar p, i = 0, dojoGlobal = dojo.global;\r\n\t\t\tif(!context){\r\n\t\t\t\tif(!parts.length){\r\n\t\t\t\t\treturn dojoGlobal;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tp = parts[i++];\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tcontext = dojo.scopeMap[p] && dojo.scopeMap[p][1];\r\n\t\t\t\t\t}catch(e){}\r\n\t\t\t\t\tcontext = context || (p in dojoGlobal ? dojoGlobal[p] : (create ? dojoGlobal[p] = {} : undefined));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile(context && (p = parts[i++])){\r\n\t\t\t\tcontext = (p in context ? context[p] : (create ? context[p] = {} : undefined));\r\n\t\t\t}\r\n\t\t\treturn context; // mixed\r\n\t\t},\r\n\r\n\t\topts = Object.prototype.toString,\r\n\r\n\t\tefficient = function(obj, offset, startWith){\r\n\t\t\treturn (startWith||[]).concat(Array.prototype.slice.call(obj, offset||0));\r\n\t\t},\r\n\r\n\t\t_pattern = /\\{([^\\}]+)\\}/g;\r\n\r\n\t// Module export\r\n\tvar lang = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module defines Javascript language extensions.\r\n\r\n\t\t// _extraNames: String[]\r\n\t\t//\t\tLists property names that must be explicitly processed during for-in iteration\r\n\t\t//\t\tin environments that have has(\"bug-for-in-skips-shadowed\") true.\r\n\t\t_extraNames:_extraNames,\r\n\r\n\t\t__mixin: function(dest, source, copyFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCopies/adds all properties of source to dest; returns dest.\r\n\t\t\t// dest: Object\r\n\t\t\t//\t\tThe object to which to copy/add all properties contained in source.\r\n\t\t\t// source: Object\r\n\t\t\t//\t\tThe object from which to draw all properties to copy into dest.\r\n\t\t\t// copyFunc: Function?\r\n\t\t\t//\t\tThe process used to copy/add a property in source; defaults to the Javascript assignment operator.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tdest, as modified\r\n\t\t\t// description:\r\n\t\t\t//\t\tAll properties, including functions (sometimes termed \"methods\"), excluding any non-standard extensions\r\n\t\t\t//\t\tfound in Object.prototype, are copied/added to dest. Copying/adding each particular property is\r\n\t\t\t//\t\tdelegated to copyFunc (if any); copyFunc defaults to the Javascript assignment operator if not provided.\r\n\t\t\t//\t\tNotice that by default, _mixin executes a so-called \"shallow copy\" and aggregate types are copied/added by reference.\r\n\t\t\tvar name, s, i, empty = {};\r\n\t\t\tfor(name in source){\r\n\t\t\t\t// the (!(name in empty) || empty[name] !== s) condition avoids copying properties in \"source\"\r\n\t\t\t\t// inherited from Object.prototype.\t For example, if dest has a custom toString() method,\r\n\t\t\t\t// don't overwrite it with the toString() method that source inherited from Object.prototype\r\n\t\t\t\ts = source[name];\r\n\t\t\t\tif(!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))){\r\n\t\t\t\t\tdest[name] = copyFunc ? copyFunc(s) : s;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn dest; // Object\r\n\t\t},\r\n\r\n\t\tmixin: function(dest, sources){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCopies/adds all properties of one or more sources to dest; returns dest.\r\n\t\t\t// dest: Object\r\n\t\t\t//\t\tThe object to which to copy/add all properties contained in source. If dest is falsy, then\r\n\t\t\t//\t\ta new object is manufactured before copying/adding properties begins.\r\n\t\t\t// sources: Object...\r\n\t\t\t//\t\tOne of more objects from which to draw all properties to copy into dest. sources are processed\r\n\t\t\t//\t\tleft-to-right and if more than one of these objects contain the same property name, the right-most\r\n\t\t\t//\t\tvalue \"wins\".\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tdest, as modified\r\n\t\t\t// description:\r\n\t\t\t//\t\tAll properties, including functions (sometimes termed \"methods\"), excluding any non-standard extensions\r\n\t\t\t//\t\tfound in Object.prototype, are copied/added from sources to dest. sources are processed left to right.\r\n\t\t\t//\t\tThe Javascript assignment operator is used to copy/add each property; therefore, by default, mixin\r\n\t\t\t//\t\texecutes a so-called \"shallow copy\" and aggregate types are copied/added by reference.\r\n\t\t\t// example:\r\n\t\t\t//\t\tmake a shallow copy of an object\r\n\t\t\t//\t|\tvar copy = lang.mixin({}, source);\r\n\t\t\t// example:\r\n\t\t\t//\t\tmany class constructors often take an object which specifies\r\n\t\t\t//\t\tvalues to be configured on the object. In this case, it is\r\n\t\t\t//\t\toften simplest to call `lang.mixin` on the `this` object:\r\n\t\t\t//\t|\tdeclare(\"acme.Base\", null, {\r\n\t\t\t//\t|\t\tconstructor: function(properties){\r\n\t\t\t//\t|\t\t\t// property configuration:\r\n\t\t\t//\t|\t\t\tlang.mixin(this, properties);\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t\t\tconsole.log(this.quip);\r\n\t\t\t//\t|\t\t\t//\t...\r\n\t\t\t//\t|\t\t},\r\n\t\t\t//\t|\t\tquip: \"I wasn't born yesterday, you know - I've seen movies.\",\r\n\t\t\t//\t|\t\t// ...\r\n\t\t\t//\t|\t});\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// create an instance of the class and configure it\r\n\t\t\t//\t|\tvar b = new acme.Base({quip: \"That's what it does!\" });\r\n\t\t\t// example:\r\n\t\t\t//\t\tcopy in properties from multiple objects\r\n\t\t\t//\t|\tvar flattened = lang.mixin(\r\n\t\t\t//\t|\t\t{\r\n\t\t\t//\t|\t\t\tname: \"Frylock\",\r\n\t\t\t//\t|\t\t\tbraces: true\r\n\t\t\t//\t|\t\t},\r\n\t\t\t//\t|\t\t{\r\n\t\t\t//\t|\t\t\tname: \"Carl Brutanananadilewski\"\r\n\t\t\t//\t|\t\t}\r\n\t\t\t//\t|\t);\r\n\t\t\t//\t|\r\n\t\t\t//\t|\t// will print \"Carl Brutanananadilewski\"\r\n\t\t\t//\t|\tconsole.log(flattened.name);\r\n\t\t\t//\t|\t// will print \"true\"\r\n\t\t\t//\t|\tconsole.log(flattened.braces);\r\n\r\n\t\t\tif(!dest){ dest = {}; }\r\n\t\t\tfor(var i = 1, l = arguments.length; i < l; i++){\r\n\t\t\t\tlang._mixin(dest, arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn dest; // Object\r\n\t\t},\r\n\r\n\t\tsetObject: function(name, value, context){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet a property from a dot-separated string, such as \"A.B.C\"\r\n\t\t\t// description:\r\n\t\t\t//\t\tUseful for longer api chains where you have to test each object in\r\n\t\t\t//\t\tthe chain, or when you have an object reference in string format.\r\n\t\t\t//\t\tObjects are created as needed along `path`. Returns the passed\r\n\t\t\t//\t\tvalue if setting is successful or `undefined` if not.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPath to a property, in the form \"A.B.C\".\r\n\t\t\t// value: anything\r\n\t\t\t//\t\tvalue or object to place at location given by name\r\n\t\t\t// context: Object?\r\n\t\t\t//\t\tOptional. Object to use as root of path. Defaults to\r\n\t\t\t//\t\t`dojo.global`.\r\n\t\t\t// example:\r\n\t\t\t//\t\tset the value of `foo.bar.baz`, regardless of whether\r\n\t\t\t//\t\tintermediate objects already exist:\r\n\t\t\t//\t| lang.setObject(\"foo.bar.baz\", value);\r\n\t\t\t// example:\r\n\t\t\t//\t\twithout `lang.setObject`, we often see code like this:\r\n\t\t\t//\t| // ensure that intermediate objects are available\r\n\t\t\t//\t| if(!obj[\"parent\"]){ obj.parent = {}; }\r\n\t\t\t//\t| if(!obj.parent[\"child\"]){ obj.parent.child = {}; }\r\n\t\t\t//\t| // now we can safely set the property\r\n\t\t\t//\t| obj.parent.child.prop = \"some value\";\r\n\t\t\t//\t\twhereas with `lang.setObject`, we can shorten that to:\r\n\t\t\t//\t| lang.setObject(\"parent.child.prop\", \"some value\", obj);\r\n\r\n\t\t\tvar parts = name.split(\".\"), p = parts.pop(), obj = getProp(parts, true, context);\r\n\t\t\treturn obj && p ? (obj[p] = value) : undefined; // Object\r\n\t\t},\r\n\r\n\t\tgetObject: function(name, create, context){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet a property from a dot-separated string, such as \"A.B.C\"\r\n\t\t\t// description:\r\n\t\t\t//\t\tUseful for longer api chains where you have to test each object in\r\n\t\t\t//\t\tthe chain, or when you have an object reference in string format.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPath to an property, in the form \"A.B.C\".\r\n\t\t\t// create: Boolean?\r\n\t\t\t//\t\tOptional. Defaults to `false`. If `true`, Objects will be\r\n\t\t\t//\t\tcreated at any point along the 'path' that is undefined.\r\n\t\t\t// context: Object?\r\n\t\t\t//\t\tOptional. Object to use as root of path. Defaults to\r\n\t\t\t//\t\t'dojo.global'. Null may be passed.\r\n\t\t\treturn getProp(name.split(\".\"), create, context); // Object\r\n\t\t},\r\n\r\n\t\texists: function(name, obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdetermine if an object supports a given method\r\n\t\t\t// description:\r\n\t\t\t//\t\tuseful for longer api chains where you have to test each object in\r\n\t\t\t//\t\tthe chain. Useful for object and method detection.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPath to an object, in the form \"A.B.C\".\r\n\t\t\t// obj: Object?\r\n\t\t\t//\t\tObject to use as root of path. Defaults to\r\n\t\t\t//\t\t'dojo.global'. Null may be passed.\r\n\t\t\t// example:\r\n\t\t\t//\t| // define an object\r\n\t\t\t//\t| var foo = {\r\n\t\t\t//\t|\t\tbar: { }\r\n\t\t\t//\t| };\r\n\t\t\t//\t|\r\n\t\t\t//\t| // search the global scope\r\n\t\t\t//\t| lang.exists(\"foo.bar\"); // true\r\n\t\t\t//\t| lang.exists(\"foo.bar.baz\"); // false\r\n\t\t\t//\t|\r\n\t\t\t//\t| // search from a particular scope\r\n\t\t\t//\t| lang.exists(\"bar\", foo); // true\r\n\t\t\t//\t| lang.exists(\"bar.baz\", foo); // false\r\n\t\t\treturn lang.getObject(name, false, obj) !== undefined; // Boolean\r\n\t\t},\r\n\r\n\t\t// Crockford (ish) functions\r\n\r\n\t\tisString: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if it is a String\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn (typeof it == \"string\" || it instanceof String); // Boolean\r\n\t\t},\r\n\r\n\t\tisArray: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if it is an Array.\r\n\t\t\t//\t\tDoes not work on Arrays created in other windows.\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn it && (it instanceof Array || typeof it == \"array\"); // Boolean\r\n\t\t},\r\n\r\n\t\tisFunction: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if it is a Function\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn opts.call(it) === \"[object Function]\";\r\n\t\t},\r\n\r\n\t\tisObject: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if it is a JavaScript object (or an Array, a Function\r\n\t\t\t//\t\tor null)\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\treturn it !== undefined &&\r\n\t\t\t\t(it === null || typeof it == \"object\" || lang.isArray(it) || lang.isFunction(it)); // Boolean\r\n\t\t},\r\n\r\n\t\tisArrayLike: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsimilar to isArray() but more permissive\r\n\t\t\t// it: anything\r\n\t\t\t//\t\tItem to test.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tIf it walks like a duck and quacks like a duck, return `true`\r\n\t\t\t// description:\r\n\t\t\t//\t\tDoesn't strongly test for \"arrayness\".  Instead, settles for \"isn't\r\n\t\t\t//\t\ta string or number and has a length property\". Arguments objects\r\n\t\t\t//\t\tand DOM collections will return true when passed to\r\n\t\t\t//\t\tisArrayLike(), but will return false when passed to\r\n\t\t\t//\t\tisArray().\r\n\t\t\treturn it && it !== undefined && // Boolean\r\n\t\t\t\t// keep out built-in constructors (Number, String, ...) which have length\r\n\t\t\t\t// properties\r\n\t\t\t\t!lang.isString(it) && !lang.isFunction(it) &&\r\n\t\t\t\t!(it.tagName && it.tagName.toLowerCase() == 'form') &&\r\n\t\t\t\t(lang.isArray(it) || isFinite(it.length));\r\n\t\t},\r\n\r\n\t\tisAlien: function(it){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns true if it is a built-in function or some other kind of\r\n\t\t\t//\t\toddball that *should* report as a function but doesn't\r\n\t\t\treturn it && !lang.isFunction(it) && /\\{\\s*\\[native code\\]\\s*\\}/.test(String(it)); // Boolean\r\n\t\t},\r\n\r\n\t\textend: function(ctor, props){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdds all properties and methods of props to constructor's\r\n\t\t\t//\t\tprototype, making them available to all instances created with\r\n\t\t\t//\t\tconstructor.\r\n\t\t\t// ctor: Object\r\n\t\t\t//\t\tTarget constructor to extend.\r\n\t\t\t// props: Object\r\n\t\t\t//\t\tOne or more objects to mix into ctor.prototype\r\n\t\t\tfor(var i=1, l=arguments.length; i<l; i++){\r\n\t\t\t\tlang._mixin(ctor.prototype, arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn ctor; // Object\r\n\t\t},\r\n\r\n\t\t_hitchArgs: function(scope, method){\r\n\t\t\tvar pre = lang._toArray(arguments, 2);\r\n\t\t\tvar named = lang.isString(method);\r\n\t\t\treturn function(){\r\n\t\t\t\t// arrayify arguments\r\n\t\t\t\tvar args = lang._toArray(arguments);\r\n\t\t\t\t// locate our method\r\n\t\t\t\tvar f = named ? (scope||dojo.global)[method] : method;\r\n\t\t\t\t// invoke with collected args\r\n\t\t\t\treturn f && f.apply(scope || this, pre.concat(args)); // mixed\r\n\t\t\t}; // Function\r\n\t\t},\r\n\r\n\t\thitch: function(scope, method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a function that will only ever execute in the a given scope.\r\n\t\t\t//\t\tThis allows for easy use of object member functions\r\n\t\t\t//\t\tin callbacks and other places in which the \"this\" keyword may\r\n\t\t\t//\t\totherwise not reference the expected scope.\r\n\t\t\t//\t\tAny number of default positional arguments may be passed as parameters\r\n\t\t\t//\t\tbeyond \"method\".\r\n\t\t\t//\t\tEach of these values will be used to \"placehold\" (similar to curry)\r\n\t\t\t//\t\tfor the hitched function.\r\n\t\t\t// scope: Object\r\n\t\t\t//\t\tThe scope to use when method executes. If method is a string,\r\n\t\t\t//\t\tscope is also the object containing method.\r\n\t\t\t// method: Function|String...\r\n\t\t\t//\t\tA function to be hitched to scope, or the name of the method in\r\n\t\t\t//\t\tscope to be hitched.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tlang.hitch(foo, \"bar\")();\r\n\t\t\t//\t\truns foo.bar() in the scope of foo\r\n\t\t\t// example:\r\n\t\t\t//\t|\tlang.hitch(foo, myFunction);\r\n\t\t\t//\t\treturns a function that runs myFunction in the scope of foo\r\n\t\t\t// example:\r\n\t\t\t//\t\tExpansion on the default positional arguments passed along from\r\n\t\t\t//\t\thitch. Passed args are mixed first, additional args after.\r\n\t\t\t//\t|\tvar foo = { bar: function(a, b, c){ console.log(a, b, c); } };\r\n\t\t\t//\t|\tvar fn = lang.hitch(foo, \"bar\", 1, 2);\r\n\t\t\t//\t|\tfn(3); // logs \"1, 2, 3\"\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar foo = { bar: 2 };\r\n\t\t\t//\t|\tlang.hitch(foo, function(){ this.bar = 10; })();\r\n\t\t\t//\t\texecute an anonymous function in scope of foo\r\n\t\t\tif(arguments.length > 2){\r\n\t\t\t\treturn lang._hitchArgs.apply(dojo, arguments); // Function\r\n\t\t\t}\r\n\t\t\tif(!method){\r\n\t\t\t\tmethod = scope;\r\n\t\t\t\tscope = null;\r\n\t\t\t}\r\n\t\t\tif(lang.isString(method)){\r\n\t\t\t\tscope = scope || dojo.global;\r\n\t\t\t\tif(!scope[method]){ throw(['lang.hitch: scope[\"', method, '\"] is null (scope=\"', scope, '\")'].join('')); }\r\n\t\t\t\treturn function(){ return scope[method].apply(scope, arguments || []); }; // Function\r\n\t\t\t}\r\n\t\t\treturn !scope ? method : function(){ return method.apply(scope, arguments || []); }; // Function\r\n\t\t},\r\n\r\n\t\tdelegate: (function(){\r\n\t\t\t// boodman/crockford delegation w/ cornford optimization\r\n\t\t\tfunction TMP(){}\r\n\t\t\treturn function(obj, props){\r\n\t\t\t\tTMP.prototype = obj;\r\n\t\t\t\tvar tmp = new TMP();\r\n\t\t\t\tTMP.prototype = null;\r\n\t\t\t\tif(props){\r\n\t\t\t\t\tlang._mixin(tmp, props);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp; // Object\r\n\t\t\t};\r\n\t\t})(),\r\n\t\t/*=====\r\n\t\tdelegate: function(obj, props){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a new object which \"looks\" to obj for properties which it\r\n\t\t\t//\t\tdoes not have a value for. Optionally takes a bag of properties to\r\n\t\t\t//\t\tseed the returned object with initially.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis is a small implementation of the Boodman/Crockford delegation\r\n\t\t\t//\t\tpattern in JavaScript. An intermediate object constructor mediates\r\n\t\t\t//\t\tthe prototype chain for the returned object, using it to delegate\r\n\t\t\t//\t\tdown to obj for property lookup when object-local lookup fails.\r\n\t\t\t//\t\tThis can be thought of similarly to ES4's \"wrap\", save that it does\r\n\t\t\t//\t\tnot act on types but rather on pure objects.\r\n\t\t\t// obj: Object\r\n\t\t\t//\t\tThe object to delegate to for properties not found directly on the\r\n\t\t\t//\t\treturn object or in props.\r\n\t\t\t// props: Object...\r\n\t\t\t//\t\tan object containing properties to assign to the returned object\r\n\t\t\t// returns:\r\n\t\t\t//\t\tan Object of anonymous type\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar foo = { bar: \"baz\" };\r\n\t\t\t//\t|\tvar thinger = lang.delegate(foo, { thud: \"xyzzy\"});\r\n\t\t\t//\t|\tthinger.bar == \"baz\"; // delegated to foo\r\n\t\t\t//\t|\tfoo.thud == undefined; // by definition\r\n\t\t\t//\t|\tthinger.thud == \"xyzzy\"; // mixed in from props\r\n\t\t\t//\t|\tfoo.bar = \"thonk\";\r\n\t\t\t//\t|\tthinger.bar == \"thonk\"; // still delegated to foo's bar\r\n\t\t},\r\n\t\t=====*/\r\n\r\n\t\t_toArray: has(\"ie\") ?\r\n\t\t\t(function(){\r\n\t\t\t\tfunction slow(obj, offset, startWith){\r\n\t\t\t\t\tvar arr = startWith||[];\r\n\t\t\t\t\tfor(var x = offset || 0; x < obj.length; x++){\r\n\t\t\t\t\t\tarr.push(obj[x]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t}\r\n\t\t\t\treturn function(obj){\r\n\t\t\t\t\treturn ((obj.item) ? slow : efficient).apply(this, arguments);\r\n\t\t\t\t};\r\n\t\t\t})() : efficient,\r\n\t\t/*=====\r\n\t\t _toArray: function(obj, offset, startWith){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tConverts an array-like object (i.e. arguments, DOMCollection) to an\r\n\t\t\t //\t\tarray. Returns a new Array with the elements of obj.\r\n\t\t\t // obj: Object\r\n\t\t\t //\t\tthe object to \"arrayify\". We expect the object to have, at a\r\n\t\t\t //\t\tminimum, a length property which corresponds to integer-indexed\r\n\t\t\t //\t\tproperties.\r\n\t\t\t // offset: Number?\r\n\t\t\t //\t\tthe location in obj to start iterating from. Defaults to 0.\r\n\t\t\t //\t\tOptional.\r\n\t\t\t // startWith: Array?\r\n\t\t\t //\t\tAn array to pack with the properties of obj. If provided,\r\n\t\t\t //\t\tproperties in obj are appended at the end of startWith and\r\n\t\t\t //\t\tstartWith is the returned array.\r\n\t\t },\r\n\t\t =====*/\r\n\r\n\t\tpartial: function(/*Function|String*/ method /*, ...*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsimilar to hitch() except that the scope object is left to be\r\n\t\t\t//\t\twhatever the execution context eventually becomes.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalling lang.partial is the functional equivalent of calling:\r\n\t\t\t//\t\t|\tlang.hitch(null, funcName, ...);\r\n\t\t\t// method:\r\n\t\t\t//\t\tThe function to \"wrap\"\r\n\t\t\tvar arr = [ null ];\r\n\t\t\treturn lang.hitch.apply(dojo, arr.concat(lang._toArray(arguments))); // Function\r\n\t\t},\r\n\r\n\t\tclone: function(/*anything*/ src){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClones objects (including DOM nodes) and all children.\r\n\t\t\t//\t\tWarning: do not clone cyclic structures.\r\n\t\t\t// src:\r\n\t\t\t//\t\tThe object to clone\r\n\t\t\tif(!src || typeof src != \"object\" || lang.isFunction(src)){\r\n\t\t\t\t// null, undefined, any non-object, or function\r\n\t\t\t\treturn src;\t// anything\r\n\t\t\t}\r\n\t\t\tif(src.nodeType && \"cloneNode\" in src){\r\n\t\t\t\t// DOM Node\r\n\t\t\t\treturn src.cloneNode(true); // Node\r\n\t\t\t}\r\n\t\t\tif(src instanceof Date){\r\n\t\t\t\t// Date\r\n\t\t\t\treturn new Date(src.getTime());\t// Date\r\n\t\t\t}\r\n\t\t\tif(src instanceof RegExp){\r\n\t\t\t\t// RegExp\r\n\t\t\t\treturn new RegExp(src);   // RegExp\r\n\t\t\t}\r\n\t\t\tvar r, i, l;\r\n\t\t\tif(lang.isArray(src)){\r\n\t\t\t\t// array\r\n\t\t\t\tr = [];\r\n\t\t\t\tfor(i = 0, l = src.length; i < l; ++i){\r\n\t\t\t\t\tif(i in src){\r\n\t\t\t\t\t\tr.push(lang.clone(src[i]));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// we don't clone functions for performance reasons\r\n\t\t\t\t//\t\t}else if(d.isFunction(src)){\r\n\t\t\t\t//\t\t\t// function\r\n\t\t\t\t//\t\t\tr = function(){ return src.apply(this, arguments); };\r\n\t\t\t}else{\r\n\t\t\t\t// generic objects\r\n\t\t\t\tr = src.constructor ? new src.constructor() : {};\r\n\t\t\t}\r\n\t\t\treturn lang._mixin(r, src, lang.clone);\r\n\t\t},\r\n\r\n\r\n\t\ttrim: String.prototype.trim ?\r\n\t\t\tfunction(str){ return str.trim(); } :\r\n\t\t\tfunction(str){ return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); },\r\n\t\t/*=====\r\n\t\t trim: function(str){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tTrims whitespace from both sides of the string\r\n\t\t\t // str: String\r\n\t\t\t //\t\tString to be trimmed\r\n\t\t\t // returns: String\r\n\t\t\t //\t\tReturns the trimmed string\r\n\t\t\t // description:\r\n\t\t\t //\t\tThis version of trim() was selected for inclusion into the base due\r\n\t\t\t //\t\tto its compact size and relatively good performance\r\n\t\t\t //\t\t(see [Steven Levithan's blog](http://blog.stevenlevithan.com/archives/faster-trim-javascript)\r\n\t\t\t //\t\tUses String.prototype.trim instead, if available.\r\n\t\t\t //\t\tThe fastest but longest version of this function is located at\r\n\t\t\t //\t\tlang.string.trim()\r\n\t\t },\r\n\t\t =====*/\r\n\r\n\t\treplace: function(tmpl, map, pattern){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPerforms parameterized substitutions on a string. Throws an\r\n\t\t\t//\t\texception if any parameter is unmatched.\r\n\t\t\t// tmpl: String\r\n\t\t\t//\t\tString to be used as a template.\r\n\t\t\t// map: Object|Function\r\n\t\t\t//\t\tIf an object, it is used as a dictionary to look up substitutions.\r\n\t\t\t//\t\tIf a function, it is called for every substitution with following parameters:\r\n\t\t\t//\t\ta whole match, a name, an offset, and the whole template\r\n\t\t\t//\t\tstring (see https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/replace\r\n\t\t\t//\t\tfor more details).\r\n\t\t\t// pattern: RegEx?\r\n\t\t\t//\t\tOptional regular expression objects that overrides the default pattern.\r\n\t\t\t//\t\tMust be global and match one item. The default is: /\\{([^\\}]+)\\}/g,\r\n\t\t\t//\t\twhich matches patterns like that: \"{xxx}\", where \"xxx\" is any sequence\r\n\t\t\t//\t\tof characters, which doesn't include \"}\".\r\n\t\t\t// returns: String\r\n\t\t\t//\t\tReturns the substituted string.\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses a dictionary for substitutions:\r\n\t\t\t//\t|\tlang.replace(\"Hello, {name.first} {name.last} AKA {nick}!\",\r\n\t\t\t//\t|\t\t{\r\n\t\t\t//\t|\t\t\tnick: \"Bob\",\r\n\t\t\t//\t|\t\t\tname: {\r\n\t\t\t//\t|\t\t\t\tfirst:\t\"Robert\",\r\n\t\t\t//\t|\t\t\t\tmiddle: \"X\",\r\n\t\t\t//\t|\t\t\t\tlast:\t\t\"Cringely\"\r\n\t\t\t//\t|\t\t\t}\r\n\t\t\t//\t|\t\t});\r\n\t\t\t//\t|\t// returns: Hello, Robert Cringely AKA Bob!\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses an array for substitutions:\r\n\t\t\t//\t|\tlang.replace(\"Hello, {0} {2}!\",\r\n\t\t\t//\t|\t\t[\"Robert\", \"X\", \"Cringely\"]);\r\n\t\t\t//\t|\t// returns: Hello, Robert Cringely!\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses a function for substitutions:\r\n\t\t\t//\t|\tfunction sum(a){\r\n\t\t\t//\t|\t\tvar t = 0;\r\n\t\t\t//\t|\t\tarrayforEach(a, function(x){ t += x; });\r\n\t\t\t//\t|\t\treturn t;\r\n\t\t\t//\t|\t}\r\n\t\t\t//\t|\tlang.replace(\r\n\t\t\t//\t|\t\t\"{count} payments averaging {avg} USD per payment.\",\r\n\t\t\t//\t|\t\tlang.hitch(\r\n\t\t\t//\t|\t\t\t{ payments: [11, 16, 12] },\r\n\t\t\t//\t|\t\t\tfunction(_, key){\r\n\t\t\t//\t|\t\t\t\tswitch(key){\r\n\t\t\t//\t|\t\t\t\t\tcase \"count\": return this.payments.length;\r\n\t\t\t//\t|\t\t\t\t\tcase \"min\":\t\treturn Math.min.apply(Math, this.payments);\r\n\t\t\t//\t|\t\t\t\t\tcase \"max\":\t\treturn Math.max.apply(Math, this.payments);\r\n\t\t\t//\t|\t\t\t\t\tcase \"sum\":\t\treturn sum(this.payments);\r\n\t\t\t//\t|\t\t\t\t\tcase \"avg\":\t\treturn sum(this.payments) / this.payments.length;\r\n\t\t\t//\t|\t\t\t\t}\r\n\t\t\t//\t|\t\t\t}\r\n\t\t\t//\t|\t\t)\r\n\t\t\t//\t|\t);\r\n\t\t\t//\t|\t// prints: 3 payments averaging 13 USD per payment.\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// uses an alternative PHP-like pattern for substitutions:\r\n\t\t\t//\t|\tlang.replace(\"Hello, ${0} ${2}!\",\r\n\t\t\t//\t|\t\t[\"Robert\", \"X\", \"Cringely\"], /\\$\\{([^\\}]+)\\}/g);\r\n\t\t\t//\t|\t// returns: Hello, Robert Cringely!\r\n\r\n\t\t\treturn tmpl.replace(pattern || _pattern, lang.isFunction(map) ?\r\n\t\t\t\tmap : function(_, k){ return lang.getObject(k, false, map); });\r\n\t\t}\r\n\t};\r\n\r\n\tlang._mixin = !has(\"bug-for-in-skips-shadowed\") ? lang.__mixin : function(dest, source, copyFunc){\r\n\t\t// non standard (MSIE 6 ?) vs standad behavior. Extracted from _mixin() function body\r\n\t\tvar name, s, i, empty = {};\r\n\t\tdest = lang.__mixin(dest, source, copyFunc);\r\n\t\tif(source){\r\n\t\t\tfor(i = 0; i < _extraLen; ++i){\r\n\t\t\t\tname = _extraNames[i];\r\n\t\t\t\ts = source[name];\r\n\t\t\t\tif(!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))){\r\n\t\t\t\t\tdest[name] = copyFunc ? copyFunc(s) : s;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dest;\r\n\t}\r\n\r\n\t 1  && lang.mixin(dojo, lang);\r\n\r\n\treturn lang;\r\n});\r\n\r\n", 
								"aggregateDeps": [
									"./kernel", 
									"../has", 
									"../sniff"
								], 
								"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/dojo/_base/lang.js", 
								"mid": "dojo/_base/lang", 
								"pack": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0.pack"
}, 
								"pid": "dojo", 
								"job": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.1.job"
}, 
								"encoding": "utf8", 
								"jobPos": 5, 
								"src": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/_base/lang.js"
							}
						], 
						"text": "define([\r\n\t\"./_base/kernel\",\t// kernel.global\r\n\t\"./_base/lang\"\r\n], function(kernel, lang){\r\n\r\n// module:\r\n//\t\tdojo/string\r\n\r\nvar string = {\r\n\t// summary:\r\n\t//\t\tString utilities for Dojo\r\n};\r\nlang.setObject(\"dojo.string\", string);\r\n\r\nstring.rep = function(/*String*/str, /*Integer*/num){\r\n\t// summary:\r\n\t//\t\tEfficiently replicate a string `n` times.\r\n\t// str:\r\n\t//\t\tthe string to replicate\r\n\t// num:\r\n\t//\t\tnumber of times to replicate the string\r\n\r\n\tif(num <= 0 || !str){ return \"\"; }\r\n\r\n\tvar buf = [];\r\n\tfor(;;){\r\n\t\tif(num & 1){\r\n\t\t\tbuf.push(str);\r\n\t\t}\r\n\t\tif(!(num >>= 1)){ break; }\r\n\t\tstr += str;\r\n\t}\r\n\treturn buf.join(\"\");\t// String\r\n};\r\n\r\nstring.pad = function(/*String*/text, /*Integer*/size, /*String?*/ch, /*Boolean?*/end){\r\n\t// summary:\r\n\t//\t\tPad a string to guarantee that it is at least `size` length by\r\n\t//\t\tfilling with the character `ch` at either the start or end of the\r\n\t//\t\tstring. Pads at the start, by default.\r\n\t// text:\r\n\t//\t\tthe string to pad\r\n\t// size:\r\n\t//\t\tlength to provide padding\r\n\t// ch:\r\n\t//\t\tcharacter to pad, defaults to '0'\r\n\t// end:\r\n\t//\t\tadds padding at the end if true, otherwise pads at start\r\n\t// example:\r\n\t//\t|\t// Fill the string to length 10 with \"+\" characters on the right.  Yields \"Dojo++++++\".\r\n\t//\t|\tstring.pad(\"Dojo\", 10, \"+\", true);\r\n\r\n\tif(!ch){\r\n\t\tch = '0';\r\n\t}\r\n\tvar out = String(text),\r\n\t\tpad = string.rep(ch, Math.ceil((size - out.length) / ch.length));\r\n\treturn end ? out + pad : pad + out;\t// String\r\n};\r\n\r\nstring.substitute = function(\t/*String*/\t\ttemplate,\r\n\t\t\t\t\t\t\t\t\t/*Object|Array*/map,\r\n\t\t\t\t\t\t\t\t\t/*Function?*/\ttransform,\r\n\t\t\t\t\t\t\t\t\t/*Object?*/\t\tthisObject){\r\n\t// summary:\r\n\t//\t\tPerforms parameterized substitutions on a string. Throws an\r\n\t//\t\texception if any parameter is unmatched.\r\n\t// template:\r\n\t//\t\ta string with expressions in the form `${key}` to be replaced or\r\n\t//\t\t`${key:format}` which specifies a format function. keys are case-sensitive.\r\n\t// map:\r\n\t//\t\thash to search for substitutions\r\n\t// transform:\r\n\t//\t\ta function to process all parameters before substitution takes\r\n\t//\t\tplace, e.g. mylib.encodeXML\r\n\t// thisObject:\r\n\t//\t\twhere to look for optional format function; default to the global\r\n\t//\t\tnamespace\r\n\t// example:\r\n\t//\t\tSubstitutes two expressions in a string from an Array or Object\r\n\t//\t|\t// returns \"File 'foo.html' is not found in directory '/temp'.\"\r\n\t//\t|\t// by providing substitution data in an Array\r\n\t//\t|\tstring.substitute(\r\n\t//\t|\t\t\"File '${0}' is not found in directory '${1}'.\",\r\n\t//\t|\t\t[\"foo.html\",\"/temp\"]\r\n\t//\t|\t);\r\n\t//\t|\r\n\t//\t|\t// also returns \"File 'foo.html' is not found in directory '/temp'.\"\r\n\t//\t|\t// but provides substitution data in an Object structure.  Dotted\r\n\t//\t|\t// notation may be used to traverse the structure.\r\n\t//\t|\tstring.substitute(\r\n\t//\t|\t\t\"File '${name}' is not found in directory '${info.dir}'.\",\r\n\t//\t|\t\t{ name: \"foo.html\", info: { dir: \"/temp\" } }\r\n\t//\t|\t);\r\n\t// example:\r\n\t//\t\tUse a transform function to modify the values:\r\n\t//\t|\t// returns \"file 'foo.html' is not found in directory '/temp'.\"\r\n\t//\t|\tstring.substitute(\r\n\t//\t|\t\t\"${0} is not found in ${1}.\",\r\n\t//\t|\t\t[\"foo.html\",\"/temp\"],\r\n\t//\t|\t\tfunction(str){\r\n\t//\t|\t\t\t// try to figure out the type\r\n\t//\t|\t\t\tvar prefix = (str.charAt(0) == \"/\") ? \"directory\": \"file\";\r\n\t//\t|\t\t\treturn prefix + \" '\" + str + \"'\";\r\n\t//\t|\t\t}\r\n\t//\t|\t);\r\n\t// example:\r\n\t//\t\tUse a formatter\r\n\t//\t|\t// returns \"thinger -- howdy\"\r\n\t//\t|\tstring.substitute(\r\n\t//\t|\t\t\"${0:postfix}\", [\"thinger\"], null, {\r\n\t//\t|\t\t\tpostfix: function(value, key){\r\n\t//\t|\t\t\t\treturn value + \" -- howdy\";\r\n\t//\t|\t\t\t}\r\n\t//\t|\t\t}\r\n\t//\t|\t);\r\n\r\n\tthisObject = thisObject || kernel.global;\r\n\ttransform = transform ?\r\n\t\tlang.hitch(thisObject, transform) : function(v){ return v; };\r\n\r\n\treturn template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n\t\tfunction(match, key, format){\r\n\t\t\tvar value = lang.getObject(key, false, map);\r\n\t\t\tif(format){\r\n\t\t\t\tvalue = lang.getObject(format, false, thisObject).call(thisObject, value, key);\r\n\t\t\t}\r\n\t\t\treturn transform(value, key).toString();\r\n\t\t}); // String\r\n};\r\n\r\nstring.trim = String.prototype.trim ?\r\n\tlang.trim : // aliasing to the native function\r\n\tfunction(str){\r\n\t\tstr = str.replace(/^\\s+/, '');\r\n\t\tfor(var i = str.length - 1; i >= 0; i--){\r\n\t\t\tif(/\\S/.test(str.charAt(i))){\r\n\t\t\t\tstr = str.substring(0, i + 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\r\n/*=====\r\n string.trim = function(str){\r\n\t // summary:\r\n\t //\t\tTrims whitespace from both sides of the string\r\n\t // str: String\r\n\t //\t\tString to be trimmed\r\n\t // returns: String\r\n\t //\t\tReturns the trimmed string\r\n\t // description:\r\n\t //\t\tThis version of trim() was taken from [Steven Levithan's blog](http://blog.stevenlevithan.com/archives/faster-trim-javascript).\r\n\t //\t\tThe short yet performant version of this function is dojo.trim(),\r\n\t //\t\twhich is part of Dojo base.  Uses String.prototype.trim instead, if available.\r\n\t return \"\";\t// String\r\n };\r\n =====*/\r\n\r\n\treturn string;\r\n});\r\n", 
						"aggregateDeps": [
							"./_base/kernel", 
							"./_base/lang"
						], 
						"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/dojo/string.js", 
						"mid": "dojo/string", 
						"pack": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.0.pack"
}, 
						"pid": "dojo", 
						"job": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.1.job"
}, 
						"encoding": "utf8", 
						"jobPos": 5, 
						"src": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/dojo/string.js"
					}, 
					{
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.1"
}, 
					{
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.1"
}
				], 
				"text": "define([\r\n\t\"dojo/string\",\r\n\t\"require\",\r\n\t\"dojo/_base/config\",\r\n\t\"dojo/_base/lang\"\r\n], function(string, require, config, lang) {\r\n\r\n\t// module:\r\n\t// \t\tgjax/i18n\r\n\t// summary:\r\n\t// \t\tThis module implements the !gjax/i18n plugin\r\n\t// description:\r\n\t// \t\tWe choose to include our own plugin to support localization files read from message.properties\r\n\t//\t\twith fallback to parent folders\r\n\r\n\t//forked from version 75cad5b4362c1178ebb543f1e33b25ce437dd74d\r\n\r\n\tvar cache = {};\r\n\r\n\t// regexp for reconstructing the master bundle name from parts of the regexp match\r\n\t// nlsRe.exec(\"foo/bar/baz/nls/foo\") gives:\r\n\t// [\"foo/bar/baz/nls/en-ca/foo\", \"foo/bar/baz/nls/\", \"/\", \"/\", \"foo\"]\r\n\tvar nlsRe = /(^.*(^|\\/)nls)(\\/|$)([^\\/]*)/;\r\n\r\n\tfunction get(messageCode, map, transform, thisObject) {\r\n\t\t// summary:\r\n\t\t//\t\tFunction that will be mixed into returning object for getting the message\r\n\t\tif (!(messageCode in this)) {\r\n\t\t\tconsole.warn(\"Message code '\" + messageCode + \"' is undefined. Code is returned instead of message.\");\r\n\t\t\t//fallback\r\n\t\t\treturn messageCode;\r\n\r\n\t\t}\r\n\t\tvar message = this[messageCode];\r\n\t\tif (arguments.length > 1) {\r\n\t\t\treturn string.substitute(message, map, transform, thisObject);\r\n\t\t}\r\n\t\treturn message;\r\n\t}\r\n\r\n\tfunction doLoad(require, bundlePath, bundleName, finishCallback) {\r\n\t\tvar bundlePathAndName = bundlePath + bundleName;\r\n\t\tvar locale = config.locale;\r\n\t\t// get the root bundle which instructs which other bundles are required to construct the localized bundle\r\n\t\t// added query string for caching workaround\r\n\t\tvar bundleUrl = require.toUrl(bundlePathAndName.replace(\"/nls/\", \"/gnls/\")) + \".js\" + \"?l=\" + locale;\r\n\t\trequire([\r\n\t\t\tbundleUrl\r\n\t\t], function(root) {\r\n\t\t\tvar current = lang.clone(root.root);\r\n\t\t\tvar availableResources = root.availableResources;\r\n\t\t\tvar modulesToLoad = [];\r\n\t\t\tfor ( var i = 0; i < availableResources.length; i++) {\r\n\t\t\t\tif (!cache[availableResources[i] + \"/\" + locale]) {\r\n\t\t\t\t\tvar moduleUri = require.toUrl(availableResources[i]) + \".js\" + \"?l=\" + locale;\r\n\t\t\t\t\tmodulesToLoad.push(moduleUri);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trequire(modulesToLoad, function() {\r\n\t\t\t\tfor ( var i = 0; i < availableResources.length; i++) {\r\n\t\t\t\t\tvar localeName = availableResources[i] + \"/\" + locale;\r\n\t\t\t\t\tif (!cache[localeName]) {\r\n\t\t\t\t\t\tcache[localeName] = arguments[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrent = lang.mixin({}, cache[localeName], current);\r\n\t\t\t\t}\r\n\t\t\t\tcurrent.get = get;\r\n\r\n\t\t\t\t// target may not have been resolve (e.g., maybe only \"fr\" exists when \"fr-ca\" was requested)\r\n\t\t\t\tvar target = bundlePathAndName + \"/\" + locale;\r\n\t\t\t\tcache[target] = current;\r\n\t\t\t\tfinishCallback();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tfunction load(id, require, callback) {\r\n\t\t// summary:\r\n\t\t//\t\tid is in one of the following formats\r\n\t\t//\r\n\t\t// 1. <path>/nls/<bundle>\r\n\t\t// => load the bundle, localized to config.locale; load all bundles localized to\r\n\t\t// config.extraLocale (if any); return the loaded bundle localized to config.locale.\r\n\t\t//\r\n\t\t// 2. <path>/nls/<locale>/<bundle>\r\n\t\t// => load then return the bundle localized to <locale>\r\n\t\t//\r\n\t\t// 3. *preload*<path>/nls/<module>*<JSON array of available locales>\r\n\t\t// => for config.locale and all config.extraLocale, load all bundles found\r\n\t\t// in the best-matching bundle rollup. A value of 1 is returned, which\r\n\t\t// is meaningless other than to say the plugin is executing the requested\r\n\t\t// preloads\r\n\t\t//\r\n\t\t// In cases 1 and 2, <path> is always normalized to an absolute module id upon entry; see\r\n\t\t// normalize. In case 3, it <path> is assumed to be absolue; this is arranged by the builder.\r\n\t\t//\r\n\t\t// To load a bundle means to insert the bundle into the plugin's cache and publish the bundle\r\n\t\t// value to the loader. Given <path>, <bundle>, and a particular <locale>, the cache key\r\n\t\t//\r\n\t\t// <path>/nls/<bundle>/<locale>\r\n\t\t//\r\n\t\t// will hold the value. Similarly, then plugin will publish this value to the loader by\r\n\t\t//\r\n\t\t// define(\"<path>/nls/<bundle>/<locale>\", <bundle-value>);\r\n\t\t//\r\n\t\t// Given this algorithm, other machinery can provide fast load paths be preplacing\r\n\t\t// values in the plugin's cache, which is public. When a load is demanded the\r\n\t\t// cache is inspected before starting any loading. Explicitly placing values in the plugin\r\n\t\t// cache is an advanced/experimental feature that should not be needed; use at your own risk.\r\n\t\t//\r\n\t\t// For the normal AMD algorithm, the root bundle is loaded first, which instructs the\r\n\t\t// plugin what additional localized bundles are required for a particular locale. These\r\n\t\t// additional locales are loaded and a mix of the root and each progressively-specific\r\n\t\t// locale is returned. For example:\r\n\t\t//\r\n\t\t// 1. The client demands \"dojo/i18n!some/path/nls/someBundle\r\n\t\t//\r\n\t\t// 2. The loader demands load(some/path/nls/someBundle)\r\n\t\t//\r\n\t\t// 3. This plugin require's \"some/path/nls/someBundle\", which is the root bundle.\r\n\t\t//\r\n\t\t// 4. Assuming config.locale is \"ab-cd-ef\" and the root bundle indicates that localizations\r\n\t\t// are available for \"ab\" and \"ab-cd-ef\" (note the missing \"ab-cd\", then the plugin\r\n\t\t// requires \"some/path/nls/ab/someBundle\" and \"some/path/nls/ab-cd-ef/someBundle\"\r\n\t\t//\r\n\t\t// 5. Upon receiving all required bundles, the plugin constructs the value of the bundle\r\n\t\t// ab-cd-ef as...\r\n\t\t//\r\n\t\t// mixin(mixin(mixin({}, require(\"some/path/nls/someBundle\"),\r\n\t\t// require(\"some/path/nls/ab/someBundle\")),\r\n\t\t// require(\"some/path/nls/ab-cd-ef/someBundle\"));\r\n\t\t//\r\n\t\t// This value is inserted into the cache and published to the loader at the\r\n\t\t// key/module-id some/path/nls/someBundle/ab-cd-ef.\r\n\t\t//\r\n\t\t// The special preload signature (case 3) instructs the plugin to stop servicing all normal requests\r\n\t\t// (further preload requests will be serviced) until all ongoing preloading has completed.\r\n\t\t//\r\n\t\t// The preload signature instructs the plugin that a special rollup module is available that contains\r\n\t\t// one or more flattened, localized bundles. The JSON array of available locales indicates which locales\r\n\t\t// are available. Here is an example:\r\n\t\t//\r\n\t\t// *preload*some/path/nls/someModule*[\"root\", \"ab\", \"ab-cd-ef\"]\r\n\t\t//\r\n\t\t// This indicates the following rollup modules are available:\r\n\t\t//\r\n\t\t// some/path/nls/someModule_ROOT\r\n\t\t// some/path/nls/someModule_ab\r\n\t\t// some/path/nls/someModule_ab-cd-ef\r\n\t\t//\r\n\t\t// Each of these modules is a normal AMD module that contains one or more flattened bundles in a hash.\r\n\t\t// For example, assume someModule contained the bundles some/bundle/path/someBundle and\r\n\t\t// some/bundle/path/someOtherBundle, then some/path/nls/someModule_ab would be expressed as folllows:\r\n\t\t//\r\n\t\t// define({\r\n\t\t// some/bundle/path/someBundle:<value of someBundle, flattened with respect to locale ab>,\r\n\t\t// some/bundle/path/someOtherBundle:<value of someOtherBundle, flattened with respect to locale ab>,\r\n\t\t// });\r\n\t\t//\r\n\t\t// E.g., given this design, preloading for locale==\"ab\" can execute the following algorithm:\r\n\t\t//\r\n\t\t// require([\"some/path/nls/someModule_ab\"], function(rollup){\r\n\t\t// for(var p in rollup){\r\n\t\t// var id = p + \"/ab\",\r\n\t\t// cache[id] = rollup[p];\r\n\t\t// define(id, rollup[p]);\r\n\t\t// }\r\n\t\t// });\r\n\t\t//\r\n\t\t// Similarly, if \"ab-cd\" is requested, the algorithm can determine that \"ab\" is the best available and\r\n\t\t// load accordingly.\r\n\t\t//\r\n\t\t// The builder will write such rollups for every layer if a non-empty localeList profile property is\r\n\t\t// provided. Further, the builder will include the following cache entry in the cache associated with\r\n\t\t// any layer.\r\n\t\t//\r\n\t\t// \"*now\":function(r){r(['dojo/i18n!*preload*<path>/nls/<module>*<JSON array of available locales>']);}\r\n\t\t//\r\n\t\t// The *now special cache module instructs the loader to apply the provided function to context-require\r\n\t\t// with respect to the particular layer being defined. This causes the plugin to hold all normal service\r\n\t\t// requests until all preloading is complete.\r\n\t\t//\r\n\t\t// Notice that this algorithm is rarely better than the standard AMD load algorithm. Consider the normal case\r\n\t\t// where the target locale has a single segment and a layer depends on a single bundle:\r\n\t\t//\r\n\t\t// Without Preloads:\r\n\t\t//\r\n\t\t// 1. Layer loads root bundle.\r\n\t\t// 2. bundle is demanded; plugin loads single localized bundle.\r\n\t\t//\r\n\t\t// With Preloads:\r\n\t\t//\r\n\t\t// 1. Layer causes preloading of target bundle.\r\n\t\t// 2. bundle is demanded; service is delayed until preloading complete; bundle is returned.\r\n\t\t//\r\n\t\t// In each case a single transaction is required to load the target bundle. In cases where multiple bundles\r\n\t\t// are required and/or the locale has multiple segments, preloads still requires a single transaction whereas\r\n\t\t// the normal path requires an additional transaction for each additional bundle/locale-segment. However all\r\n\t\t// of these additional transactions can be done concurrently. Owing to this analysis, the entire preloading\r\n\t\t// algorithm can be discard during a build by setting the has feature dojo-preload-i18n-Api to false.\r\n\t\t//\r\n\r\n\t\tvar match = nlsRe.exec(id);\r\n\t\tvar bundlePath = match[1] + \"/\";\r\n\t\tvar bundleName = match[4];\r\n\t\tvar loadTarget = bundlePath + bundleName + \"/\" + config.locale;\r\n\r\n\t\tif (!cache[loadTarget]) {\r\n\t\t\tdoLoad(require, bundlePath, bundleName, finish);\r\n\t\t} else {\r\n\t\t\tfinish();\r\n\t\t}\r\n\r\n\t\tfunction finish() {\r\n\t\t\tvar origImpl = lang.delegate(cache[loadTarget]);\r\n\t\t\t//allow to call i18n(\"messageCode\") directly, instead of using i18n.get\r\n\t\t\tvar newImpl = lang.hitch(origImpl, \"get\");\r\n\t\t\tlang.mixin(newImpl, origImpl);\r\n\t\t\tcallback(newImpl);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tload : load\r\n\t};\r\n});\r\n", 
				"aggregateDeps": [
					"dojo/string", 
					"require", 
					"dojo/_base/config", 
					"dojo/_base/lang"
				], 
				"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/gjax/i18n.js", 
				"mid": "gjax/i18n", 
				"pack": {
					"trees": [
						[
							"c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/gjax", 
							"c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/gjax", 
							undefined
						]
					], 
					"basePath": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/gjax", 
					"packageJson": {
						"description": "GTI libraries.", 
						"directories": {
							"lib": "."
						}, 
						"selfFilename": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/gjax/package.json", 
						"dependencies": {
							"dojo": "current"
						}, 
						"version": "1.0.0dev", 
						"dojoBuild": "gjax.profile.js", 
						"keywords": [
							"JavaScript", 
							"Dojo", 
							"Widget"
						], 
						"main": "main", 
						"licenses": [
						], 
						"name": "gjax"
					}, 
					"copyrightLayers": false, 
					"location": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/gjax", 
					"selfFilename": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/gjax/gjax.profile.js", 
					"copyrightNonlayers": false, 
					"copyright": "", 
					"resourceTags": {
					}, 
					"main": "main", 
					"name": "gjax", 
					"files": [
					], 
					"dirs": [
					]
				}, 
				"pid": "gjax", 
				"job": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.1.job"
}, 
				"encoding": "utf8", 
				"jobPos": 5, 
				"src": "c:/DEV/sts-workspace/UniusNg/UI/app-ui/src/main/webapp/resources/gjax/i18n.js"
			}, 
			"adam/gnls/abc": {
				"deps": [
				], 
				"mid": "adam/gnls/abc", 
				"pid": "", 
				"tag": {
					"amd": 1, 
					"gnls": true
				}
			}, 
			"adam/gnls/mno": {
				"deps": [
				], 
				"mid": "adam/gnls/mno", 
				"pid": "", 
				"tag": {
					"amd": 1, 
					"gnls": true
				}
			}, 
			"test/foo": {
				"tag": {
					"amd": 1
				}, 
				"deps": [
					{
	"$ref": "#layer.moduleSet.gjax/i18n"
}, 
					{
	"$ref": "#layer.moduleSet.adam/gnls/abc"
}, 
					{
	"$ref": "#layer.moduleSet.gjax/i18n"
}, 
					{
	"$ref": "#layer.moduleSet.adam/gnls/mno"
}
				], 
				"text": "define([\r\n    \t\"gjax/i18n!adam/nls/abc\",\r\n    \t\"gjax/i18n!adam/nls/mno\"\r\n], function(i18n) {\r\n\tconsole.log(i18n);\r\n});", 
				"aggregateDeps": [
					"gjax/i18n!adam/nls/abc", 
					"gjax/i18n!adam/nls/mno"
				], 
				"dest": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/release/test/foo.js", 
				"mid": "test/foo", 
				"pack": {
	"$ref": "#pack"
}, 
				"pid": "test", 
				"job": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0.deps.0.deps.1.job"
}, 
				"encoding": "utf8", 
				"jobPos": 5, 
				"src": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/test/foo.js"
			}, 
			"dojo/string": {
	"$ref": "#layer.moduleSet.gjax/i18n.deps.0"
}, 
			"undefined": {
	"$ref": "#layer"
}
		}, 
		"exclude": [
			"dojo/dojo"
		], 
		"include": [
			"test/foo"
		]
	}, 
	"pid": "test", 
	"encoding": "utf8", 
	"job": [
		[
			undefined, 
			5
		], 
		[
			undefined, 
			5
		], 
		[
			undefined, 
			7
		], 
		[
			undefined, 
			7
		]
	], 
	"jobPos": 1, 
	"src": "c:/DEV/sts-workspace/UniusNg/UI/gjax-tools-ui/src/main/webapp/WEB-INF/views/build-tools/_testBuild/test/layerA.js"
}